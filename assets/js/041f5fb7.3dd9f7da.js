(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[5948],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var a=r.createContext({}),c=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(a.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,a=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=c(n),f=o,d=m["".concat(a,".").concat(f)]||m[f]||s[f]||l;return n?r.createElement(d,i(i({ref:t},u),{},{components:n})):r.createElement(d,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,i=new Array(l);i[0]=m;var p={};for(var a in t)hasOwnProperty.call(t,a)&&(p[a]=t[a]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var c=2;c<l;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9063:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return a},metadata:function(){return c},assets:function(){return u},toc:function(){return s},default:function(){return f}});var r=n(4034),o=n(9973),l=(n(7294),n(3905)),i=["components"],p={slug:881,title:"881 \u6551\u751f\u8247",tags:["\u8d2a\u5fc3","\u53cc\u6307\u9488","\u6392\u5e8f"]},a=void 0,c={permalink:"/leetcode/881",editUrl:"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-08-26-881.md",source:"@site/blog/2021-08-26-881.md",title:"881 \u6551\u751f\u8247",description:"\u8fd9\u662f\u4e2d\u7b49\u96be\u5ea6\uff1f\u6392\u5e8f\u8d2a\u5fc3\u5c31\u51fa\u6765\u4e86\u554a\u2026\u2026",date:"2021-08-26T00:00:00.000Z",formattedDate:"August 26, 2021",tags:[{label:"\u8d2a\u5fc3",permalink:"/leetcode/tags/\u8d2a\u5fc3"},{label:"\u53cc\u6307\u9488",permalink:"/leetcode/tags/\u53cc\u6307\u9488"},{label:"\u6392\u5e8f",permalink:"/leetcode/tags/\u6392\u5e8f"}],readingTime:1.435,truncated:!0,authors:[],prevItem:{title:"1480 \u4e00\u7ef4\u6570\u7ec4\u7684\u52a8\u6001\u548c",permalink:"/leetcode/1480"},nextItem:{title:"1646 \u83b7\u53d6\u751f\u6210\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c",permalink:"/leetcode/1646"}},u={authorsImageUrls:[]},s=[{value:"\u9898\u76ee",id:"\u9898\u76ee",children:[],level:2},{value:"C++ Solution",id:"c-solution",children:[],level:2}],m={toc:s};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"\u8fd9\u662f\u4e2d\u7b49\u96be\u5ea6\uff1f\u6392\u5e8f\u8d2a\u5fc3\u5c31\u51fa\u6765\u4e86\u554a\u2026\u2026"),(0,l.kt)("h2",{id:"\u9898\u76ee"},"\u9898\u76ee"),(0,l.kt)("p",null,"\u7b2c \xa0i\xa0 \u4e2a\u4eba\u7684\u4f53\u91cd\u4e3a \xa0people","[i]","\uff0c\u6bcf\u8258\u8239\u53ef\u4ee5\u627f\u8f7d\u7684\u6700\u5927\u91cd\u91cf\u4e3a \xa0limit\u3002"),(0,l.kt)("p",null,"\u6bcf\u8258\u8239\u6700\u591a\u53ef\u540c\u65f6\u8f7d\u4e24\u4eba\uff0c\u4f46\u6761\u4ef6\u662f\u8fd9\u4e9b\u4eba\u7684\u91cd\u91cf\u4e4b\u548c\u6700\u591a\u4e3a \xa0limit\u3002"),(0,l.kt)("p",null,"\u8fd4\u56de\u8f7d\u5230\u6bcf\u4e00\u4e2a\u4eba\u6240\u9700\u7684\u6700\u5c0f\u8239\u6570\u3002(\u4fdd\u8bc1\u6bcf\u4e2a\u4eba\u90fd\u80fd\u88ab\u8239\u8f7d)\u3002"),(0,l.kt)("p",null,"\u793a\u4f8b 1\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1apeople = [1,2], limit = 3\n\u8f93\u51fa\uff1a1\n\u89e3\u91ca\uff1a1 \u8258\u8239\u8f7d (1, 2)\n")),(0,l.kt)("p",null,"\u793a\u4f8b 2\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1apeople = [3,2,2,1], limit = 3\n\u8f93\u51fa\uff1a3\n\u89e3\u91ca\uff1a3 \u8258\u8239\u5206\u522b\u8f7d (1, 2), (2) \u548c (3)\n")),(0,l.kt)("p",null,"\u793a\u4f8b 3\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1apeople = [3,5,3,4], limit = 5\n\u8f93\u51fa\uff1a4\n\u89e3\u91ca\uff1a4 \u8258\u8239\u5206\u522b\u8f7d (3), (3), (4), (5)\n")),(0,l.kt)("p",null,"\u63d0\u793a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"1 <=\xa0people.length <= 50000\n1 <= people[i] <=\xa0limit <= 30000\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u94fe\u63a5\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/boats-to-save-people"},"https://leetcode-cn.com/problems/boats-to-save-people"),"\n\u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002")),(0,l.kt)("h2",{id:"c-solution"},"C++ Solution"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int numRescueBoats(vector<int>& people, int limit) {\n        sort(people.begin(), people.end());\n        int lo = 0;\n        int hi = people.size() - 1;\n\n        while (lo <= hi)\n        {\n            if (people[hi] + people[lo] <= limit)\n            {\n                lo += 1;\n            }\n            hi -= 1;\n        }\n        return people.size() - 1 - hi;\n    }\n};\n")))}f.isMDXComponent=!0}}]);
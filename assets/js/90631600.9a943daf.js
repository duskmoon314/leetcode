(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[529],{664:function(n){"use strict";n.exports=JSON.parse('{"blogPosts":[{"id":"502","metadata":{"permalink":"/leetcode/502","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-09-08-502.md","source":"@site/blog/2021-09-08-502.md","title":"502 IPO","description":"\u5148\u5bf9\u6240\u6709\u7684\u9879\u76ee\u6839\u636e\u8d44\u672c\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u5206\u6bb5\u52a0\u5165\u4e00\u4e2a\u4ee5\u5229\u6da6\u4e3a\u504f\u5e8f\u7684\u5927\u6839\u5806\u7684\u4f18\u5148\u7ea7\u961f\u5217\uff0c\u6bcf\u6b21\u53d6\u51fa\u5806\u9876\u66f4\u65b0\u8d44\u672c\uff0c\u518d\u8fdb\u5165\u4e0b\u4e00\u8f6e\u9879\u76ee\u7684\u52a0\u5165\u548c\u9009\u53d6\u3002\u6ce8\u610f\u8d44\u672c\u4ec0\u4e48\u9879\u76ee\u90fd\u505a\u4e0d\u4e86\u7684\u60c5\u51b5\u8981\u76f4\u63a5\u8fd4\u56de\u3002","date":"2021-09-08T00:00:00.000Z","formattedDate":"September 8, 2021","tags":[{"label":"\u4f18\u5148\u7ea7\u961f\u5217","permalink":"/leetcode/tags/\u4f18\u5148\u7ea7\u961f\u5217"},{"label":"\u5927\u6839\u5806","permalink":"/leetcode/tags/\u5927\u6839\u5806"},{"label":"\u8d2a\u5fc3","permalink":"/leetcode/tags/\u8d2a\u5fc3"}],"readingTime":3.175,"truncated":true,"authors":[],"nextItem":{"title":"704 \u4e8c\u5206\u67e5\u627e","permalink":"/leetcode/704"}},"content":"\u5148\u5bf9\u6240\u6709\u7684\u9879\u76ee\u6839\u636e\u8d44\u672c\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u5206\u6bb5\u52a0\u5165\u4e00\u4e2a\u4ee5\u5229\u6da6\u4e3a\u504f\u5e8f\u7684\u5927\u6839\u5806\u7684\u4f18\u5148\u7ea7\u961f\u5217\uff0c\u6bcf\u6b21\u53d6\u51fa\u5806\u9876\u66f4\u65b0\u8d44\u672c\uff0c\u518d\u8fdb\u5165\u4e0b\u4e00\u8f6e\u9879\u76ee\u7684\u52a0\u5165\u548c\u9009\u53d6\u3002\u6ce8\u610f\u8d44\u672c\u4ec0\u4e48\u9879\u76ee\u90fd\u505a\u4e0d\u4e86\u7684\u60c5\u51b5\u8981\u76f4\u63a5\u8fd4\u56de\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u9898\u76ee\\n\\n\u5047\u8bbe \u529b\u6263\uff08LeetCode\uff09\u5373\u5c06\u5f00\u59cb IPO \u3002\u4e3a\u4e86\u4ee5\u66f4\u9ad8\u7684\u4ef7\u683c\u5c06\u80a1\u7968\u5356\u7ed9\u98ce\u9669\u6295\u8d44\u516c\u53f8\uff0c\u529b\u6263 \u5e0c\u671b\u5728 IPO \u4e4b\u524d\u5f00\u5c55\u4e00\u4e9b\u9879\u76ee\u4ee5\u589e\u52a0\u5176\u8d44\u672c\u3002 \u7531\u4e8e\u8d44\u6e90\u6709\u9650\uff0c\u5b83\u53ea\u80fd\u5728 IPO \u4e4b\u524d\u5b8c\u6210\u6700\u591a k \u4e2a\u4e0d\u540c\u7684\u9879\u76ee\u3002\u5e2e\u52a9 \u529b\u6263 \u8bbe\u8ba1\u5b8c\u6210\u6700\u591a k \u4e2a\u4e0d\u540c\u9879\u76ee\u540e\u5f97\u5230\u6700\u5927\u603b\u8d44\u672c\u7684\u65b9\u5f0f\u3002\\n\\n\u7ed9\u4f60 n \u4e2a\u9879\u76ee\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u9879\u76ee i \uff0c\u5b83\u90fd\u6709\u4e00\u4e2a\u7eaf\u5229\u6da6 profits[i] \uff0c\u548c\u542f\u52a8\u8be5\u9879\u76ee\u9700\u8981\u7684\u6700\u5c0f\u8d44\u672c capital[i] \u3002\\n\\n\u6700\u521d\uff0c\u4f60\u7684\u8d44\u672c\u4e3a w \u3002\u5f53\u4f60\u5b8c\u6210\u4e00\u4e2a\u9879\u76ee\u65f6\uff0c\u4f60\u5c06\u83b7\u5f97\u7eaf\u5229\u6da6\uff0c\u4e14\u5229\u6da6\u5c06\u88ab\u6dfb\u52a0\u5230\u4f60\u7684\u603b\u8d44\u672c\u4e2d\u3002\\n\\n\u603b\u800c\u8a00\u4e4b\uff0c\u4ece\u7ed9\u5b9a\u9879\u76ee\u4e2d\u9009\u62e9 \u6700\u591a k \u4e2a\u4e0d\u540c\u9879\u76ee\u7684\u5217\u8868\uff0c\u4ee5 \u6700\u5927\u5316\u6700\u7ec8\u8d44\u672c \uff0c\u5e76\u8f93\u51fa\u6700\u7ec8\u53ef\u83b7\u5f97\u7684\u6700\u591a\u8d44\u672c\u3002\\n\\n\u7b54\u6848\u4fdd\u8bc1\u5728 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8303\u56f4\u5185\u3002\\n\\n\u793a\u4f8b 1\uff1a\\n\\n```\\n\u8f93\u5165\uff1ak = 2, w = 0, profits = [1,2,3], capital = [0,1,1]\\n\u8f93\u51fa\uff1a4\\n\u89e3\u91ca\uff1a\\n\u7531\u4e8e\u4f60\u7684\u521d\u59cb\u8d44\u672c\u4e3a 0\uff0c\u4f60\u4ec5\u53ef\u4ee5\u4ece 0 \u53f7\u9879\u76ee\u5f00\u59cb\u3002\\n\u5728\u5b8c\u6210\u540e\uff0c\u4f60\u5c06\u83b7\u5f97 1 \u7684\u5229\u6da6\uff0c\u4f60\u7684\u603b\u8d44\u672c\u5c06\u53d8\u4e3a 1\u3002\\n\u6b64\u65f6\u4f60\u53ef\u4ee5\u9009\u62e9\u5f00\u59cb 1 \u53f7\u6216 2 \u53f7\u9879\u76ee\u3002\\n\u7531\u4e8e\u4f60\u6700\u591a\u53ef\u4ee5\u9009\u62e9\u4e24\u4e2a\u9879\u76ee\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u5b8c\u6210 2 \u53f7\u9879\u76ee\u4ee5\u83b7\u5f97\u6700\u5927\u7684\u8d44\u672c\u3002\\n\u56e0\u6b64\uff0c\u8f93\u51fa\u6700\u540e\u6700\u5927\u5316\u7684\u8d44\u672c\uff0c\u4e3a 0 + 1 + 3 = 4\u3002\\n```\\n\\n\u793a\u4f8b 2\uff1a\\n\\n```\\n\u8f93\u5165\uff1ak = 3, w = 0, profits = [1,2,3], capital = [0,1,2]\\n\u8f93\u51fa\uff1a6\\n```\\n\\n\u63d0\u793a\uff1a\\n\\n```\\n1 <= k <= 105\\n0 <= w <= 109\\nn == profits.length\\nn == capital.length\\n1 <= n <= 105\\n0 <= profits[i] <= 104\\n0 <= capital[i] <= 109\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/ipo\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int findMaximizedCapital(int k, int w, vector<int>& profits, vector<int>& capital) {\\n        vector<tuple<int, int>> proj;\\n        priority_queue<int> heap;\\n        for (int i = 0; i < profits.size(); ++i) {\\n            proj.push_back(make_tuple(capital[i], profits[i]));\\n        }\\n        sort(proj.begin(), proj.end());\\n        int idx = 0;\\n        for (; k > 0; --k) {\\n            for (; idx < profits.size() && get<0>(proj[idx]) <= w; ++idx) {\\n                heap.push(get<1>(proj[idx]));\\n            }\\n            if (heap.empty()) {\\n                return w;\\n            }\\n            w += heap.top();\\n            heap.pop();\\n        }\\n        return w;\\n    }\\n};\\n```"},{"id":"704","metadata":{"permalink":"/leetcode/704","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-09-06-704.md","source":"@site/blog/2021-09-06-704.md","title":"704 \u4e8c\u5206\u67e5\u627e","description":"\u53ef\u4ee5\u6bd4\u8f83\u7b80\u5355\u5730\u5199\u51fa\u9012\u5f52\u7684\u5728\u5de6\u5b50\u3001\u53f3\u5b50\u5e8f\u5217\u53bb\u67e5\u627e","date":"2021-09-06T00:00:00.000Z","formattedDate":"September 6, 2021","tags":[{"label":"\u4e8c\u5206\u67e5\u627e","permalink":"/leetcode/tags/\u4e8c\u5206\u67e5\u627e"},{"label":"\u9012\u5f52","permalink":"/leetcode/tags/\u9012\u5f52"}],"readingTime":2.075,"truncated":true,"authors":[],"prevItem":{"title":"502 IPO","permalink":"/leetcode/502"},"nextItem":{"title":"470 \u7528 Rand7() \u5b9e\u73b0 Rand10()","permalink":"/leetcode/470"}},"content":"\u53ef\u4ee5\u6bd4\u8f83\u7b80\u5355\u5730\u5199\u51fa\u9012\u5f52\u7684\u5728\u5de6\u5b50\u3001\u53f3\u5b50\u5e8f\u5217\u53bb\u67e5\u627e\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u9898\u76ee\\n\\n\u7ed9\u5b9a\u4e00\u4e2a \xa0n\xa0 \u4e2a\u5143\u7d20\u6709\u5e8f\u7684\uff08\u5347\u5e8f\uff09\u6574\u578b\u6570\u7ec4 \xa0nums \u548c\u4e00\u4e2a\u76ee\u6807\u503c \xa0target \xa0\uff0c\u5199\u4e00\u4e2a\u51fd\u6570\u641c\u7d22 \xa0nums\xa0 \u4e2d\u7684 target\uff0c\u5982\u679c\u76ee\u6807\u503c\u5b58\u5728\u8fd4\u56de\u4e0b\u6807\uff0c\u5426\u5219\u8fd4\u56de -1\u3002\\n\\n\u793a\u4f8b 1:\\n\\n```\\n\u8f93\u5165: nums = [-1,0,3,5,9,12], target = 9\\n\u8f93\u51fa: 4\\n\u89e3\u91ca: 9 \u51fa\u73b0\u5728 nums \u4e2d\u5e76\u4e14\u4e0b\u6807\u4e3a 4\\n```\\n\\n\u793a\u4f8b \xa02:\\n\\n```\\n\u8f93\u5165: nums = [-1,0,3,5,9,12], target = 2\\n\u8f93\u51fa: -1\\n\u89e3\u91ca: 2 \u4e0d\u5b58\u5728 nums \u4e2d\u56e0\u6b64\u8fd4\u56de -1\\n```\\n\\n\u63d0\u793a\uff1a\\n\\n```\\n\u4f60\u53ef\u4ee5\u5047\u8bbe nums\xa0\u4e2d\u7684\u6240\u6709\u5143\u7d20\u662f\u4e0d\u91cd\u590d\u7684\u3002\\nn\xa0\u5c06\u5728\xa0[1, 10000]\u4e4b\u95f4\u3002\\nnums\xa0\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u5c06\u5728\xa0[-9999, 9999]\u4e4b\u95f4\u3002\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/binary-search\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n\u9012\u5f52\u7684\u65b9\u6cd5\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int search(vector<int>&nums, int lo, int hi, int target) {\\n        if (hi - lo <= 2) {\\n            for (int i = lo; i <= hi; ++i) {\\n                if (nums[i] == target) {\\n                    return i;\\n                }\\n            }\\n            return -1;\\n        } else {\\n            int mid = (lo + hi) >> 1;\\n            if (target <= nums[mid]) {\\n                return search(nums, lo, mid, target);\\n            } else {\\n                return search(nums, mid + 1, hi, target);\\n            }\\n        }\\n    }\\n    int search(vector<int>& nums, int target) {\\n        return search(nums, 0, nums.size() - 1, target);\\n    }\\n};\\n```\\n\\n\u76f4\u63a5\u5faa\u73af\u7684\u65b9\u6cd5\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int search(vector<int>& nums, int target) {\\n        int lo = 0;\\n        int hi = nums.size() - 1;\\n        while (true) {\\n            if (hi - lo < 3) {\\n                for (int i = lo; i <= hi; ++i) {\\n                    if (nums[i] == target) {\\n                        return i;\\n                    }\\n                }\\n                return -1;\\n            }\\n            int mid = (lo + hi) >> 1;\\n            if (nums [mid] == target) {\\n                return mid;\\n            } else if (nums[mid] < target) {\\n                lo = mid;\\n            } else {\\n                hi = mid;\\n            }\\n        }\\n    }\\n};\\n```"},{"id":"470","metadata":{"permalink":"/leetcode/470","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-09-05-470.md","source":"@site/blog/2021-09-05-470.md","title":"470 \u7528 Rand7() \u5b9e\u73b0 Rand10()","description":"\u6700\u7b80\u5355\u7684\u5b9e\u73b0\u662f\u6784\u6210\u4e8c\u7ef4\u70b9\u9635\uff0c\u4ece\u4e2d\u9009\u53d6\u53ef\u4ee5\u5e73\u5747\u91c7\u6837\u7684\u54ea\u4e9b\uff0c\u5176\u4ed6\u70b9\u53d8\u4e3a\u201c\u518d\u6765\u4e00\u6b21\u201d\u3002\u4e5f\u53ef\u4ee5\u7cbe\u5fc3\u8bbe\u8ba1\u201c\u518d\u6765\u4e00\u6b21\u201d\u4ee5\u51cf\u5c11\u8c03\u7528\u6b21\u6570\u3002","date":"2021-09-05T00:00:00.000Z","formattedDate":"September 5, 2021","tags":[{"label":"\u91c7\u6837","permalink":"/leetcode/tags/\u91c7\u6837"},{"label":"\u6982\u7387","permalink":"/leetcode/tags/\u6982\u7387"}],"readingTime":1.4,"truncated":true,"authors":[],"prevItem":{"title":"704 \u4e8c\u5206\u67e5\u627e","permalink":"/leetcode/704"},"nextItem":{"title":"\u5251\u6307 Offer 10-I \u6590\u6ce2\u90a3\u5951\u6570\u5217","permalink":"/leetcode/offer10I"}},"content":"\u6700\u7b80\u5355\u7684\u5b9e\u73b0\u662f\u6784\u6210\u4e8c\u7ef4\u70b9\u9635\uff0c\u4ece\u4e2d\u9009\u53d6\u53ef\u4ee5\u5e73\u5747\u91c7\u6837\u7684\u54ea\u4e9b\uff0c\u5176\u4ed6\u70b9\u53d8\u4e3a\u201c\u518d\u6765\u4e00\u6b21\u201d\u3002\u4e5f\u53ef\u4ee5\u7cbe\u5fc3\u8bbe\u8ba1\u201c\u518d\u6765\u4e00\u6b21\u201d\u4ee5\u51cf\u5c11\u8c03\u7528\u6b21\u6570\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u9898\u76ee\\n\\n\u5df2\u6709\u65b9\u6cd5 \xa0rand7\xa0 \u53ef\u751f\u6210 1 \u5230 7 \u8303\u56f4\u5185\u7684\u5747\u5300\u968f\u673a\u6574\u6570\uff0c\u8bd5\u5199\u4e00\u4e2a\u65b9\u6cd5 \xa0rand10\xa0 \u751f\u6210 1 \u5230 10 \u8303\u56f4\u5185\u7684\u5747\u5300\u968f\u673a\u6574\u6570\u3002\\n\\n\u4e0d\u8981\u4f7f\u7528\u7cfb\u7edf\u7684 \xa0Math.random()\xa0 \u65b9\u6cd5\u3002\\n\\n\u793a\u4f8b 1:\\n\\n```\\n\u8f93\u5165: 1\\n\u8f93\u51fa: [7]\\n```\\n\\n\u793a\u4f8b 2:\\n\\n```\\n\u8f93\u5165: 2\\n\u8f93\u51fa: [8,4]\\n```\\n\\n\u793a\u4f8b 3:\\n\\n```\\n\u8f93\u5165: 3\\n\u8f93\u51fa: [8,1,10]\\n```\\n\\n\u63d0\u793a:\\n\\n```\\nrand7\xa0\u5df2\u5b9a\u4e49\u3002\\n\u4f20\u5165\u53c2\u6570:\xa0n\xa0\u8868\u793a\xa0rand10\xa0\u7684\u8c03\u7528\u6b21\u6570\u3002\\n```\\n\\n\u8fdb\u9636:\\n\\n```\\nrand7()\u8c03\u7528\u6b21\u6570\u7684\xa0\u671f\u671b\u503c\xa0\u662f\u591a\u5c11\xa0?\\n\u4f60\u80fd\u5426\u5c3d\u91cf\u5c11\u8c03\u7528 rand7() ?\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/implement-rand10-using-rand7\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int rand10() {\\n        int i, j, ans;\\n        do {\\n            i = rand7();\\n            j = rand7();\\n            ans = j + i * 7;\\n        } while (ans > 47);\\n        return 1 + ans % 10;\\n    }\\n};\\n```"},{"id":"offer10I","metadata":{"permalink":"/leetcode/offer10I","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-09-04-offer10I.md","source":"@site/blog/2021-09-04-offer10I.md","title":"\u5251\u6307 Offer 10-I \u6590\u6ce2\u90a3\u5951\u6570\u5217","description":"\u52a0\u6cd5\u7684\u7ed3\u679c\u4ecd\u7136\u540c\u4f59\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u53d6\u6a21","date":"2021-09-04T00:00:00.000Z","formattedDate":"September 4, 2021","tags":[{"label":"\u9012\u5f52","permalink":"/leetcode/tags/\u9012\u5f52"},{"label":"\u9012\u63a8","permalink":"/leetcode/tags/\u9012\u63a8"},{"label":"\u52a8\u6001\u89c4\u5212","permalink":"/leetcode/tags/\u52a8\u6001\u89c4\u5212"},{"label":"\u6570\u8bba","permalink":"/leetcode/tags/\u6570\u8bba"}],"readingTime":1.32,"truncated":true,"authors":[],"prevItem":{"title":"470 \u7528 Rand7() \u5b9e\u73b0 Rand10()","permalink":"/leetcode/470"},"nextItem":{"title":"\u9762\u8bd5\u9898 17.14 \u6700\u5c0f K \u4e2a\u6570","permalink":"/leetcode/17.14"}},"content":"\u52a0\u6cd5\u7684\u7ed3\u679c\u4ecd\u7136\u540c\u4f59\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u53d6\u6a21\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u9898\u76ee\\n\\n\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165 n \uff0c\u6c42\u6590\u6ce2\u90a3\u5951\uff08Fibonacci\uff09\u6570\u5217\u7684\u7b2c n \u9879\uff08\u5373 F(N)\uff09\u3002\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a\\n\\nF(0) = 0,\xa0 \xa0F(1)\xa0= 1\\nF(N) = F(N - 1) + F(N - 2), \u5176\u4e2d N > 1.\\n\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7531 0 \u548c 1 \u5f00\u59cb\uff0c\u4e4b\u540e\u7684\u6590\u6ce2\u90a3\u5951\u6570\u5c31\u662f\u7531\u4e4b\u524d\u7684\u4e24\u6570\u76f8\u52a0\u800c\u5f97\u51fa\u3002\\n\\n\u7b54\u6848\u9700\u8981\u53d6\u6a21 1e9+7\uff081000000007\uff09\uff0c\u5982\u8ba1\u7b97\u521d\u59cb\u7ed3\u679c\u4e3a\uff1a1000000008\uff0c\u8bf7\u8fd4\u56de 1\u3002\\n\\n\u793a\u4f8b 1\uff1a\\n\\n```\\n\u8f93\u5165\uff1an = 2\\n\u8f93\u51fa\uff1a1\\n```\\n\\n\u793a\u4f8b 2\uff1a\\n\\n```\\n\u8f93\u5165\uff1an = 5\\n\u8f93\u51fa\uff1a5\\n```\\n\\n\u63d0\u793a\uff1a\\n\\n```\\n0 <= n <= 100\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/fei-bo-na-qi-shu-lie-lcof\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int fib(int n) {\\n        if (n < 2) {\\n            return n;\\n        }\\n        int a = 0;\\n        int b = 1;\\n        int c = 0;\\n        for (int i = 1; i < n; ++i) {\\n            c = (a + b) % 1000000007;\\n            a = b;\\n            b = c;\\n        }\\n        return b;\\n    }\\n};\\n```"},{"id":"17.14","metadata":{"permalink":"/leetcode/17.14","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-09-03-17.14.md","source":"@site/blog/2021-09-03-17.14.md","title":"\u9762\u8bd5\u9898 17.14 \u6700\u5c0f K \u4e2a\u6570","description":"\u6bd4\u8f83\u76f4\u63a5\u7684\u53ef\u4ee5\u60f3\u5230\u6392\u5e8f\u9009\u62e9\uff0c\u4f46\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u8fd9\u6837\u7684\u65f6\u7a7a\u590d\u6742\u5ea6\u3002\u63a5\u7740\u53ef\u4ee5\u60f3\u5230\u4f7f\u7528\u5927\u6839\u5806\uff0c\u7ef4\u62a4\u6700\u5c0f\u7684 K \u4e2a\u6570\u3002\u8fdb\u4e00\u6b65\u53ef\u4ee5\u60f3\u9012\u5f52\u5730\u4f7f\u7528\u5feb\u6392\u627e\u8f74\u70b9\uff0c\u4f46\u5199\u8d77\u6765\u5c31\u590d\u6742\u4e86\u3002","date":"2021-09-03T00:00:00.000Z","formattedDate":"September 3, 2021","tags":[{"label":"\u5806","permalink":"/leetcode/tags/\u5806"},{"label":"\u4f18\u5148\u961f\u5217","permalink":"/leetcode/tags/\u4f18\u5148\u961f\u5217"},{"label":"\u5feb\u901f\u6392\u5e8f","permalink":"/leetcode/tags/\u5feb\u901f\u6392\u5e8f"}],"readingTime":1.165,"truncated":true,"authors":[],"prevItem":{"title":"\u5251\u6307 Offer 10-I \u6590\u6ce2\u90a3\u5951\u6570\u5217","permalink":"/leetcode/offer10I"},"nextItem":{"title":"\u5251\u6307 Offer 22 \u94fe\u8868\u4e2d\u5012\u6570\u7b2c k \u4e2a\u8282\u70b9","permalink":"/leetcode/offer22"}},"content":"\u6bd4\u8f83\u76f4\u63a5\u7684\u53ef\u4ee5\u60f3\u5230\u6392\u5e8f\u9009\u62e9\uff0c\u4f46\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u8fd9\u6837\u7684\u65f6\u7a7a\u590d\u6742\u5ea6\u3002\u63a5\u7740\u53ef\u4ee5\u60f3\u5230\u4f7f\u7528\u5927\u6839\u5806\uff0c\u7ef4\u62a4\u6700\u5c0f\u7684 K \u4e2a\u6570\u3002\u8fdb\u4e00\u6b65\u53ef\u4ee5\u60f3\u9012\u5f52\u5730\u4f7f\u7528\u5feb\u6392\u627e\u8f74\u70b9\uff0c\u4f46\u5199\u8d77\u6765\u5c31\u590d\u6742\u4e86\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u9898\u76ee\\n\\n\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u627e\u51fa\u6570\u7ec4\u4e2d\u6700\u5c0f\u7684 k \u4e2a\u6570\u3002\u4ee5\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u8fd9 k \u4e2a\u6570\u5747\u53ef\u3002\\n\\n\u793a\u4f8b\uff1a\\n\\n\u8f93\u5165\uff1a arr = [1,3,5,7,2,4,6,8], k = 4\\n\u8f93\u51fa\uff1a [1,2,3,4]\\n\u63d0\u793a\uff1a\\n\\n```\\n0 <= len(arr) <= 100000\\n0 <= k <= min(100000, len(arr))\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/smallest-k-lcci\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    vector<int> smallestK(vector<int>& arr, int k) {\\n        vector<int> ans(arr.begin(), arr.begin() + k);\\n        if (k == 0) {\\n            return ans;\\n        }\\n        make_heap(ans.begin(), ans.end());\\n        for(int i = k; i < arr.size(); ++i) {\\n            if (arr[i] < ans[0]) {\\n                pop_heap(ans.begin(), ans.end());\\n                ans[k - 1] = arr[i];\\n                push_heap(ans.begin(), ans.end());\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```"},{"id":"offer22","metadata":{"permalink":"/leetcode/offer22","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-09-02-offer22.md","source":"@site/blog/2021-09-02-offer22.md","title":"\u5251\u6307 Offer 22 \u94fe\u8868\u4e2d\u5012\u6570\u7b2c k \u4e2a\u8282\u70b9","description":"\u7ef4\u62a4\u4e24\u4e2a\u6307\u9488\uff0c\u95f4\u8ddd k\uff0c\u5c3e\u6307\u9488\u6307\u5411\u672b\u5c3e\u65f6\u8f93\u51fa\u5373\u53ef","date":"2021-09-02T00:00:00.000Z","formattedDate":"September 2, 2021","tags":[{"label":"\u53cc\u6307\u9488","permalink":"/leetcode/tags/\u53cc\u6307\u9488"}],"readingTime":1.18,"truncated":true,"authors":[],"prevItem":{"title":"\u9762\u8bd5\u9898 17.14 \u6700\u5c0f K \u4e2a\u6570","permalink":"/leetcode/17.14"},"nextItem":{"title":"1109 \u822a\u73ed\u9884\u8ba2\u7edf\u8ba1","permalink":"/leetcode/1109"}},"content":"\u7ef4\u62a4\u4e24\u4e2a\u6307\u9488\uff0c\u95f4\u8ddd k\uff0c\u5c3e\u6307\u9488\u6307\u5411\u672b\u5c3e\u65f6\u8f93\u51fa\u5373\u53ef\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u9898\u76ee\\n\\n\u8f93\u5165\u4e00\u4e2a\u94fe\u8868\uff0c\u8f93\u51fa\u8be5\u94fe\u8868\u4e2d\u5012\u6570\u7b2c k \u4e2a\u8282\u70b9\u3002\u4e3a\u4e86\u7b26\u5408\u5927\u591a\u6570\u4eba\u7684\u4e60\u60ef\uff0c\u672c\u9898\u4ece 1 \u5f00\u59cb\u8ba1\u6570\uff0c\u5373\u94fe\u8868\u7684\u5c3e\u8282\u70b9\u662f\u5012\u6570\u7b2c 1 \u4e2a\u8282\u70b9\u3002\\n\\n\u4f8b\u5982\uff0c\u4e00\u4e2a\u94fe\u8868\u6709 6 \u4e2a\u8282\u70b9\uff0c\u4ece\u5934\u8282\u70b9\u5f00\u59cb\uff0c\u5b83\u4eec\u7684\u503c\u4f9d\u6b21\u662f 1\u30012\u30013\u30014\u30015\u30016\u3002\u8fd9\u4e2a\u94fe\u8868\u7684\u5012\u6570\u7b2c 3 \u4e2a\u8282\u70b9\u662f\u503c\u4e3a 4 \u7684\u8282\u70b9\u3002\\n\\n\u793a\u4f8b\uff1a\\n\\n```\\n\u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868: 1->2->3->4->5, \u548c k = 2.\\n\\n\u8fd4\u56de\u94fe\u8868 4->5.\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    ListNode* getKthFromEnd(ListNode* head, int k) {\\n        ListNode* start = head;\\n        ListNode* end = head;\\n        for (int i = 1; i < k; ++i) {\\n            end = end->next;\\n        }\\n        while (end->next != NULL) {\\n            start = start->next;\\n            end = end->next;\\n        }\\n        return start;\\n    }\\n};\\n```"},{"id":"1109","metadata":{"permalink":"/leetcode/1109","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-08-31-1109.md","source":"@site/blog/2021-08-31-1109.md","title":"1109 \u822a\u73ed\u9884\u8ba2\u7edf\u8ba1","description":"\u53ef\u4ee5\u770b\u4f5c\u51b2\u51fb\u54cd\u5e94\uff0c[1,0,0,-1] => [1,1,1,0]\uff0c\u6765\u8868\u793a\u4e00\u6bb5\u533a\u95f4\u7684\u77e9\u5f62\u6ce2\u3002\u6700\u540e\u6c42\u524d\u7f00\u548c\uff08\u5dee\u5206\u548c\uff09\uff0c\u5373\u662f\u6c42\u54cd\u5e94\uff0c\u5f97\u5230\u7ed3\u679c\u3002","date":"2021-08-31T00:00:00.000Z","formattedDate":"August 31, 2021","tags":[{"label":"\u524d\u7f00\u548c","permalink":"/leetcode/tags/\u524d\u7f00\u548c"},{"label":"\u5dee\u5206\u548c","permalink":"/leetcode/tags/\u5dee\u5206\u548c"},{"label":"\u51b2\u51fb\u54cd\u5e94","permalink":"/leetcode/tags/\u51b2\u51fb\u54cd\u5e94"}],"readingTime":1.895,"truncated":true,"authors":[],"prevItem":{"title":"\u5251\u6307 Offer 22 \u94fe\u8868\u4e2d\u5012\u6570\u7b2c k \u4e2a\u8282\u70b9","permalink":"/leetcode/offer22"},"nextItem":{"title":"528 \u6309\u6743\u91cd\u968f\u673a\u9009\u62e9","permalink":"/leetcode/528"}},"content":"\u53ef\u4ee5\u770b\u4f5c\u51b2\u51fb\u54cd\u5e94\uff0c[1,0,0,-1] => [1,1,1,0]\uff0c\u6765\u8868\u793a\u4e00\u6bb5\u533a\u95f4\u7684\u77e9\u5f62\u6ce2\u3002\u6700\u540e\u6c42\u524d\u7f00\u548c\uff08\u5dee\u5206\u548c\uff09\uff0c\u5373\u662f\u6c42\u54cd\u5e94\uff0c\u5f97\u5230\u7ed3\u679c\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u9898\u76ee\\n\\n\u8fd9\u91cc\u6709 \xa0n\xa0 \u4e2a\u822a\u73ed\uff0c\u5b83\u4eec\u5206\u522b\u4ece 1 \u5230 n \u8fdb\u884c\u7f16\u53f7\u3002\\n\\n\u6709\u4e00\u4efd\u822a\u73ed\u9884\u8ba2\u8868 \xa0bookings \uff0c\u8868\u4e2d\u7b2c \xa0i\xa0 \u6761\u9884\u8ba2\u8bb0\u5f55 \xa0bookings[i] = [firsti, lasti, seatsi]\xa0 \u610f\u5473\u7740\u5728\u4ece firsti\xa0 \u5230 lasti \uff08\u5305\u542b firsti \u548c lasti \uff09\u7684 \u6bcf\u4e2a\u822a\u73ed \u4e0a\u9884\u8ba2\u4e86 seatsi\xa0 \u4e2a\u5ea7\u4f4d\u3002\\n\\n\u8bf7\u4f60\u8fd4\u56de\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4 \xa0answer\uff0c\u5176\u4e2d answer[i] \u662f\u822a\u73ed i \u4e0a\u9884\u8ba2\u7684\u5ea7\u4f4d\u603b\u6570\u3002\\n\\n\u793a\u4f8b 1\uff1a\\n\\n```\\n\u8f93\u5165\uff1abookings = [[1,2,10],[2,3,20],[2,5,25]], n = 5\\n\u8f93\u51fa\uff1a[10,55,45,25,25]\\n\u89e3\u91ca\uff1a\\n\u822a\u73ed\u7f16\u53f7        1   2   3   4   5\\n\u9884\u8ba2\u8bb0\u5f55 1 \uff1a   10  10\\n\u9884\u8ba2\u8bb0\u5f55 2 \uff1a       20  20\\n\u9884\u8ba2\u8bb0\u5f55 3 \uff1a       25  25  25  25\\n\u603b\u5ea7\u4f4d\u6570\uff1a      10  55  45  25  25\\n\u56e0\u6b64\uff0canswer = [10,55,45,25,25]\\n```\\n\\n\u793a\u4f8b 2\uff1a\\n\\n```\\n\u8f93\u5165\uff1abookings = [[1,2,10],[2,2,15]], n = 2\\n\u8f93\u51fa\uff1a[10,25]\\n\u89e3\u91ca\uff1a\\n\u822a\u73ed\u7f16\u53f7        1   2\\n\u9884\u8ba2\u8bb0\u5f55 1 \uff1a   10  10\\n\u9884\u8ba2\u8bb0\u5f55 2 \uff1a       15\\n\u603b\u5ea7\u4f4d\u6570\uff1a      10  25\\n\u56e0\u6b64\uff0canswer = [10,25]\\n```\\n\\n\u63d0\u793a\uff1a\\n\\n```\\n1 <= n <= 2 * 104\\n1 <= bookings.length <= 2 * 104\\nbookings[i].length == 3\\n1 <= firsti <= lasti <= n\\n1 <= seatsi <= 104\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/corporate-flight-bookings\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    vector<int> corpFlightBookings(vector<vector<int>>& bookings, int n) {\\n        vector<int> answer(n);\\n        for (const vector<int> &b : bookings) {\\n            answer[b[0] - 1] += b[2];\\n            if (b[1] < n)\\n                answer[b[1]] -= b[2];\\n        }\\n        partial_sum(answer.begin(), answer.end(), answer.begin());\\n        return answer;\\n    }\\n};\\n```"},{"id":"528","metadata":{"permalink":"/leetcode/528","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-08-30-528.md","source":"@site/blog/2021-08-30-528.md","title":"528 \u6309\u6743\u91cd\u968f\u673a\u9009\u62e9","description":"\u4f7f\u7528 OS \u8c03\u5ea6\u5f69\u7968\u7b97\u6cd5\u7684\u601d\u8def\uff0c\u5f53 m \u4e2a\u5f69\u7968\u6743\u91cd\u548c\u8d85\u8fc7\u968f\u673a\u6570\u65f6\uff0c\u9009\u51fa\u7b2c m \u4e2a\u3002\u5373\u5c06\u6743\u91cd\u548c\u5206\u6bb5\u540e\u968f\u673a\u9009\u53d6\u4ee5\u5f97\u5230\u516c\u5e73\u6027\u3002\u53ef\u4ee5\u4f7f\u7528\u524d\u7f00\u548c\u4e0e\u4e8c\u5206\u67e5\u627e\u6765\u4f18\u5316\uff0cstd \u4e2d\u6709\u76f8\u5173\u51fd\u6570\u3002","date":"2021-08-30T00:00:00.000Z","formattedDate":"August 30, 2021","tags":[{"label":"\u524d\u7f00\u548c","permalink":"/leetcode/tags/\u524d\u7f00\u548c"},{"label":"\u4e8c\u5206\u67e5\u627e","permalink":"/leetcode/tags/\u4e8c\u5206\u67e5\u627e"},{"label":"\u5f69\u7968\u7b97\u6cd5","permalink":"/leetcode/tags/\u5f69\u7968\u7b97\u6cd5"},{"label":"std","permalink":"/leetcode/tags/std"}],"readingTime":2.3,"truncated":true,"authors":[],"prevItem":{"title":"1109 \u822a\u73ed\u9884\u8ba2\u7edf\u8ba1","permalink":"/leetcode/1109"},"nextItem":{"title":"1588 \u6240\u6709\u5947\u6570\u957f\u5ea6\u5b50\u6570\u7ec4\u7684\u548c","permalink":"/leetcode/1588"}},"content":"\u4f7f\u7528 OS \u8c03\u5ea6\u5f69\u7968\u7b97\u6cd5\u7684\u601d\u8def\uff0c\u5f53 m \u4e2a\u5f69\u7968\u6743\u91cd\u548c\u8d85\u8fc7\u968f\u673a\u6570\u65f6\uff0c\u9009\u51fa\u7b2c m \u4e2a\u3002\u5373\u5c06\u6743\u91cd\u548c\u5206\u6bb5\u540e\u968f\u673a\u9009\u53d6\u4ee5\u5f97\u5230\u516c\u5e73\u6027\u3002\u53ef\u4ee5\u4f7f\u7528\u524d\u7f00\u548c\u4e0e\u4e8c\u5206\u67e5\u627e\u6765\u4f18\u5316\uff0cstd \u4e2d\u6709\u76f8\u5173\u51fd\u6570\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u9898\u76ee\\n\\n\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\u6570\u7ec4 \xa0w \uff0c\u5176\u4e2d \xa0w[i]\xa0 \u4ee3\u8868\u4e0b\u6807 i\xa0 \u7684\u6743\u91cd\uff08\u4e0b\u6807\u4ece 0 \u5f00\u59cb\uff09\uff0c\u8bf7\u5199\u4e00\u4e2a\u51fd\u6570 \xa0pickIndex\xa0\uff0c\u5b83\u53ef\u4ee5\u968f\u673a\u5730\u83b7\u53d6\u4e0b\u6807 i\uff0c\u9009\u53d6\u4e0b\u6807 i\xa0 \u7684\u6982\u7387\u4e0e \xa0w[i]\xa0 \u6210\u6b63\u6bd4\u3002\\n\\n\u4f8b\u5982\uff0c\u5bf9\u4e8e w = [1, 3]\uff0c\u6311\u9009\u4e0b\u6807 0 \u7684\u6982\u7387\u4e3a 1 / (1 + 3)\xa0= 0.25 \uff08\u5373\uff0c25%\uff09\uff0c\u800c\u9009\u53d6\u4e0b\u6807 1 \u7684\u6982\u7387\u4e3a 3 / (1 + 3)\xa0= 0.75\uff08\u5373\uff0c75%\uff09\u3002\\n\\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u9009\u53d6\u4e0b\u6807 i \u7684\u6982\u7387\u4e3a w[i] / sum(w) \u3002\\n\\n\u793a\u4f8b 1\uff1a\\n\\n```\\n\u8f93\u5165\uff1a\\n[\\"Solution\\",\\"pickIndex\\"]\\n[[[1]],[]]\\n\u8f93\u51fa\uff1a\\n[null,0]\\n\u89e3\u91ca\uff1a\\nSolution solution = new Solution([1]);\\nsolution.pickIndex(); // \u8fd4\u56de 0\uff0c\u56e0\u4e3a\u6570\u7ec4\u4e2d\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u6240\u4ee5\u552f\u4e00\u7684\u9009\u62e9\u662f\u8fd4\u56de\u4e0b\u6807 0\u3002\\n```\\n\\n\u793a\u4f8b 2\uff1a\\n\\n```\\n\u8f93\u5165\uff1a\\n[\\"Solution\\",\\"pickIndex\\",\\"pickIndex\\",\\"pickIndex\\",\\"pickIndex\\",\\"pickIndex\\"]\\n[[[1,3]],[],[],[],[],[]]\\n\u8f93\u51fa\uff1a\\n[null,1,1,1,1,0]\\n\u89e3\u91ca\uff1a\\nSolution solution = new Solution([1, 3]);\\nsolution.pickIndex(); // \u8fd4\u56de 1\uff0c\u8fd4\u56de\u4e0b\u6807 1\uff0c\u8fd4\u56de\u8be5\u4e0b\u6807\u6982\u7387\u4e3a 3/4 \u3002\\nsolution.pickIndex(); // \u8fd4\u56de 1\\nsolution.pickIndex(); // \u8fd4\u56de 1\\nsolution.pickIndex(); // \u8fd4\u56de 1\\nsolution.pickIndex(); // \u8fd4\u56de 0\uff0c\u8fd4\u56de\u4e0b\u6807 0\uff0c\u8fd4\u56de\u8be5\u4e0b\u6807\u6982\u7387\u4e3a 1/4 \u3002\\n\\n\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u968f\u673a\u95ee\u9898\uff0c\u5141\u8bb8\u591a\u4e2a\u7b54\u6848\uff0c\u56e0\u6b64\u4e0b\u5217\u8f93\u51fa\u90fd\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u6b63\u786e\u7684:\\n[null,1,1,1,1,0]\\n[null,1,1,1,1,1]\\n[null,1,1,1,0,0]\\n[null,1,1,1,0,1]\\n[null,1,0,1,0,0]\\n......\\n\u8bf8\u82e5\u6b64\u7c7b\u3002\\n```\\n\\n\u63d0\u793a\uff1a\\n\\n```\\n1 <= w.length <= 10000\\n1 <= w[i] <= 10^5\\npickIndex\xa0\u5c06\u88ab\u8c03\u7528\u4e0d\u8d85\u8fc7\xa010000\xa0\u6b21\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/random-pick-with-weight\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    vector<int> sum;\\n\\n    Solution(vector<int>& w): sum(move(w)) {\\n        partial_sum(sum.begin(), sum.end(), sum.begin());\\n    }\\n\\n    int pickIndex() {\\n        int r = rand() % sum.back() + 1;\\n        return lower_bound(sum.begin(), sum.end(), r) - sum.begin();\\n    }\\n};\\n```"},{"id":"1588","metadata":{"permalink":"/leetcode/1588","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-08-29-1588.md","source":"@site/blog/2021-08-29-1588.md","title":"1588 \u6240\u6709\u5947\u6570\u957f\u5ea6\u5b50\u6570\u7ec4\u7684\u548c","description":"\u8ba1\u7b97\u524d\u7f00\u548c\uff0c\u7136\u540e\u5faa\u73af\u505a\u5dee\u5c31\u53ef\u4ee5\u4e86","date":"2021-08-29T00:00:00.000Z","formattedDate":"August 29, 2021","tags":[{"label":"\u524d\u7f00\u548c","permalink":"/leetcode/tags/\u524d\u7f00\u548c"}],"readingTime":1.77,"truncated":true,"authors":[],"prevItem":{"title":"528 \u6309\u6743\u91cd\u968f\u673a\u9009\u62e9","permalink":"/leetcode/528"},"nextItem":{"title":"1480 \u4e00\u7ef4\u6570\u7ec4\u7684\u52a8\u6001\u548c","permalink":"/leetcode/1480"}},"content":"\u8ba1\u7b97\u524d\u7f00\u548c\uff0c\u7136\u540e\u5faa\u73af\u505a\u5dee\u5c31\u53ef\u4ee5\u4e86\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u9898\u76ee\\n\\n\u7ed9\u4f60\u4e00\u4e2a\u6b63\u6574\u6570\u6570\u7ec4 \xa0arr\xa0\uff0c\u8bf7\u4f60\u8ba1\u7b97\u6240\u6709\u53ef\u80fd\u7684\u5947\u6570\u957f\u5ea6\u5b50\u6570\u7ec4\u7684\u548c\u3002\\n\\n\u5b50\u6570\u7ec4 \u5b9a\u4e49\u4e3a\u539f\u6570\u7ec4\u4e2d\u7684\u4e00\u4e2a\u8fde\u7eed\u5b50\u5e8f\u5217\u3002\\n\\n\u8bf7\u4f60\u8fd4\u56de arr\xa0 \u4e2d \u6240\u6709\u5947\u6570\u957f\u5ea6\u5b50\u6570\u7ec4\u7684\u548c \u3002\\n\\n\u793a\u4f8b 1\uff1a\\n\\n```\\n\u8f93\u5165\uff1aarr = [1,4,2,5,3]\\n\u8f93\u51fa\uff1a58\\n\u89e3\u91ca\uff1a\u6240\u6709\u5947\u6570\u957f\u5ea6\u5b50\u6570\u7ec4\u548c\u5b83\u4eec\u7684\u548c\u4e3a\uff1a\\n[1] = 1\\n[4] = 4\\n[2] = 2\\n[5] = 5\\n[3] = 3\\n[1,4,2] = 7\\n[4,2,5] = 11\\n[2,5,3] = 10\\n[1,4,2,5,3] = 15\\n\u6211\u4eec\u5c06\u6240\u6709\u503c\u6c42\u548c\u5f97\u5230 1 + 4 + 2 + 5 + 3 + 7 + 11 + 10 + 15 = 58\\n```\\n\\n\u793a\u4f8b 2\uff1a\\n\\n```\\n\u8f93\u5165\uff1aarr = [1,2]\\n\u8f93\u51fa\uff1a3\\n\u89e3\u91ca\uff1a\u603b\u5171\u53ea\u6709 2 \u4e2a\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u5b50\u6570\u7ec4\uff0c[1] \u548c [2]\u3002\u5b83\u4eec\u7684\u548c\u4e3a 3 \u3002\\n```\\n\\n\u793a\u4f8b 3\uff1a\\n\\n```\\n\u8f93\u5165\uff1aarr = [10,11,12]\\n\u8f93\u51fa\uff1a66\\n```\\n\\n\u63d0\u793a\uff1a\\n\\n```\\n1 <= arr.length <= 100\\n1 <= arr[i] <= 1000\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/sum-of-all-odd-length-subarrays\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int sumOddLengthSubarrays(vector<int> &arr) {\\n        if (arr.size() == 1)\\n        {\\n            return arr[0];\\n        }\\n        arr.insert(arr.begin(), 0);\\n        for (int i = 1; i < arr.size(); ++i)\\n        {\\n            arr[i] += arr[i - 1];\\n        }\\n        int result = 0;\\n        for (int i = 1; i < arr.size(); ++i)\\n        {\\n            for (int j = i; j < arr.size(); j += 2)\\n            {\\n                result += arr[j] - arr[i - 1];\\n            }\\n        }\\n        return result;\\n    }\\n};\\n```"},{"id":"1480","metadata":{"permalink":"/leetcode/1480","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-08-28-1480.md","source":"@site/blog/2021-08-28-1480.md","title":"1480 \u4e00\u7ef4\u6570\u7ec4\u7684\u52a8\u6001\u548c","description":"\u5c31\u524d\u7f00\u548c\u76f4\u63a5\u7b97","date":"2021-08-28T00:00:00.000Z","formattedDate":"August 28, 2021","tags":[{"label":"\u524d\u7f00\u548c","permalink":"/leetcode/tags/\u524d\u7f00\u548c"}],"readingTime":0.99,"truncated":true,"authors":[],"prevItem":{"title":"1588 \u6240\u6709\u5947\u6570\u957f\u5ea6\u5b50\u6570\u7ec4\u7684\u548c","permalink":"/leetcode/1588"},"nextItem":{"title":"881 \u6551\u751f\u8247","permalink":"/leetcode/881"}},"content":"\u5c31\u524d\u7f00\u548c\u76f4\u63a5\u7b97\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u9898\u76ee\\n\\n\u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4 nums \u3002\u6570\u7ec4\u300c\u52a8\u6001\u548c\u300d\u7684\u8ba1\u7b97\u516c\u5f0f\u4e3a\uff1arunningSum[i] = sum(nums[0]\u2026nums[i]) \u3002\\n\\n\u8bf7\u8fd4\u56de nums \u7684\u52a8\u6001\u548c\u3002\\n\\n\u793a\u4f8b 1\uff1a\\n\\n```\\n\u8f93\u5165\uff1anums = [1,2,3,4]\\n\u8f93\u51fa\uff1a[1,3,6,10]\\n\u89e3\u91ca\uff1a\u52a8\u6001\u548c\u8ba1\u7b97\u8fc7\u7a0b\u4e3a [1, 1+2, 1+2+3, 1+2+3+4] \u3002\\n```\\n\\n\u793a\u4f8b 2\uff1a\\n\\n```\\n\u8f93\u5165\uff1anums = [1,1,1,1,1]\\n\u8f93\u51fa\uff1a[1,2,3,4,5]\\n\u89e3\u91ca\uff1a\u52a8\u6001\u548c\u8ba1\u7b97\u8fc7\u7a0b\u4e3a [1, 1+1, 1+1+1, 1+1+1+1, 1+1+1+1+1] \u3002\\n```\\n\\n\u793a\u4f8b 3\uff1a\\n\\n```\\n\u8f93\u5165\uff1anums = [3,1,2,10,1]\\n\u8f93\u51fa\uff1a[3,4,6,16,17]\\n```\\n\\n\u63d0\u793a\uff1a\\n\\n```\\n1 <= nums.length <= 1000\\n-10^6\xa0<= nums[i] <=\xa010^6\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/running-sum-of-1d-array\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    vector<int> runningSum(vector<int>& nums) {\\n        for (int i = 1; i < nums.size(); ++i) {\\n            nums[i] += nums[i - 1];\\n        }\\n        return nums;\\n    }\\n};\\n```"},{"id":"881","metadata":{"permalink":"/leetcode/881","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-08-26-881.md","source":"@site/blog/2021-08-26-881.md","title":"881 \u6551\u751f\u8247","description":"\u8fd9\u662f\u4e2d\u7b49\u96be\u5ea6\uff1f\u6392\u5e8f\u8d2a\u5fc3\u5c31\u51fa\u6765\u4e86\u554a\u2026\u2026","date":"2021-08-26T00:00:00.000Z","formattedDate":"August 26, 2021","tags":[{"label":"\u8d2a\u5fc3","permalink":"/leetcode/tags/\u8d2a\u5fc3"},{"label":"\u53cc\u6307\u9488","permalink":"/leetcode/tags/\u53cc\u6307\u9488"},{"label":"\u6392\u5e8f","permalink":"/leetcode/tags/\u6392\u5e8f"}],"readingTime":1.435,"truncated":true,"authors":[],"prevItem":{"title":"1480 \u4e00\u7ef4\u6570\u7ec4\u7684\u52a8\u6001\u548c","permalink":"/leetcode/1480"},"nextItem":{"title":"1646 \u83b7\u53d6\u751f\u6210\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c","permalink":"/leetcode/1646"}},"content":"\u8fd9\u662f\u4e2d\u7b49\u96be\u5ea6\uff1f\u6392\u5e8f\u8d2a\u5fc3\u5c31\u51fa\u6765\u4e86\u554a\u2026\u2026\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u9898\u76ee\\n\\n\u7b2c \xa0i\xa0 \u4e2a\u4eba\u7684\u4f53\u91cd\u4e3a \xa0people[i]\uff0c\u6bcf\u8258\u8239\u53ef\u4ee5\u627f\u8f7d\u7684\u6700\u5927\u91cd\u91cf\u4e3a \xa0limit\u3002\\n\\n\u6bcf\u8258\u8239\u6700\u591a\u53ef\u540c\u65f6\u8f7d\u4e24\u4eba\uff0c\u4f46\u6761\u4ef6\u662f\u8fd9\u4e9b\u4eba\u7684\u91cd\u91cf\u4e4b\u548c\u6700\u591a\u4e3a \xa0limit\u3002\\n\\n\u8fd4\u56de\u8f7d\u5230\u6bcf\u4e00\u4e2a\u4eba\u6240\u9700\u7684\u6700\u5c0f\u8239\u6570\u3002(\u4fdd\u8bc1\u6bcf\u4e2a\u4eba\u90fd\u80fd\u88ab\u8239\u8f7d)\u3002\\n\\n\u793a\u4f8b 1\uff1a\\n\\n```\\n\u8f93\u5165\uff1apeople = [1,2], limit = 3\\n\u8f93\u51fa\uff1a1\\n\u89e3\u91ca\uff1a1 \u8258\u8239\u8f7d (1, 2)\\n```\\n\\n\u793a\u4f8b 2\uff1a\\n\\n```\\n\u8f93\u5165\uff1apeople = [3,2,2,1], limit = 3\\n\u8f93\u51fa\uff1a3\\n\u89e3\u91ca\uff1a3 \u8258\u8239\u5206\u522b\u8f7d (1, 2), (2) \u548c (3)\\n```\\n\\n\u793a\u4f8b 3\uff1a\\n\\n```\\n\u8f93\u5165\uff1apeople = [3,5,3,4], limit = 5\\n\u8f93\u51fa\uff1a4\\n\u89e3\u91ca\uff1a4 \u8258\u8239\u5206\u522b\u8f7d (3), (3), (4), (5)\\n```\\n\\n\u63d0\u793a\uff1a\\n\\n```\\n1 <=\xa0people.length <= 50000\\n1 <= people[i] <=\xa0limit <= 30000\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/boats-to-save-people\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int numRescueBoats(vector<int>& people, int limit) {\\n        sort(people.begin(), people.end());\\n        int lo = 0;\\n        int hi = people.size() - 1;\\n\\n        while (lo <= hi)\\n        {\\n            if (people[hi] + people[lo] <= limit)\\n            {\\n                lo += 1;\\n            }\\n            hi -= 1;\\n        }\\n        return people.size() - 1 - hi;\\n    }\\n};\\n```"},{"id":"1646","metadata":{"permalink":"/leetcode/1646","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-08-23-1646.md","source":"@site/blog/2021-08-23-1646.md","title":"1646 \u83b7\u53d6\u751f\u6210\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c","description":"\u53ef\u4ee5\u5bb9\u6613\u5730\u4f7f\u7528 O(n) \u7684\u65b9\u6cd5\uff0c\u4e00\u7ef4\u52a8\u5f52\u7b97\u51fa\u6240\u6709\u7684\u6570\uff0c\u540c\u65f6\u8bb0\u5f55\u6700\u5927\u503c\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u628a\u8ba1\u7b97\u8fc7\u7a0b\u7528\u9012\u5f52\u5199\u51fa\u6765\uff0c\u8fd8\u53ef\u4ee5\u6253\u8868\u3002","date":"2021-08-23T00:00:00.000Z","formattedDate":"August 23, 2021","tags":[{"label":"\u52a8\u6001\u89c4\u5212","permalink":"/leetcode/tags/\u52a8\u6001\u89c4\u5212"},{"label":"\u9012\u5f52","permalink":"/leetcode/tags/\u9012\u5f52"}],"readingTime":0.64,"truncated":true,"authors":[],"prevItem":{"title":"881 \u6551\u751f\u8247","permalink":"/leetcode/881"},"nextItem":{"title":"789 \u9003\u8131\u963b\u788d\u8005","permalink":"/leetcode/789"}},"content":"\u53ef\u4ee5\u5bb9\u6613\u5730\u4f7f\u7528 O(n) \u7684\u65b9\u6cd5\uff0c\u4e00\u7ef4\u52a8\u5f52\u7b97\u51fa\u6240\u6709\u7684\u6570\uff0c\u540c\u65f6\u8bb0\u5f55\u6700\u5927\u503c\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u628a\u8ba1\u7b97\u8fc7\u7a0b\u7528\u9012\u5f52\u5199\u51fa\u6765\uff0c\u8fd8\u53ef\u4ee5\u6253\u8868\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int getMaximumGenerated(int n) {\\n        vector<int> nums = vector<int>(n + 1);\\n        if (n < 2)\\n        {\\n            return n;\\n        }\\n        nums[1] = 1;\\n        int max = 0;\\n        for (int i = 1; i <= n; ++i)\\n        {\\n            int j = i >> 1;\\n            nums[i] = nums[j] + (i % 2 ? nums[j + 1] : 0);\\n            max = nums[i] > max ? nums[i] : max;\\n        }\\n        return max;\\n    }\\n};\\n```"},{"id":"789","metadata":{"permalink":"/leetcode/789","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-08-22-789.md","source":"@site/blog/2021-08-22-789.md","title":"789 \u9003\u8131\u963b\u788d\u8005","description":"\u60f3\u6e05\u695a\u4ec0\u4e48\u60c5\u51b5\u4e0b\u9b3c\u4f1a\u5403\u5230\u5403\u8c46\u4eba\uff0c\u5c31\u89e3\u51b3\u4e86\u3002","date":"2021-08-22T00:00:00.000Z","formattedDate":"August 22, 2021","tags":[{"label":"\u66fc\u54c8\u987f\u8ddd\u79bb","permalink":"/leetcode/tags/\u66fc\u54c8\u987f\u8ddd\u79bb"}],"readingTime":2.695,"truncated":true,"authors":[],"prevItem":{"title":"1646 \u83b7\u53d6\u751f\u6210\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c","permalink":"/leetcode/1646"},"nextItem":{"title":"443 \u538b\u7f29\u5b57\u7b26\u4e32","permalink":"/leetcode/443"}},"content":"\u60f3\u6e05\u695a\u4ec0\u4e48\u60c5\u51b5\u4e0b\u9b3c\u4f1a\u5403\u5230\u5403\u8c46\u4eba\uff0c\u5c31\u89e3\u51b3\u4e86\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u9898\u76ee\\n\\n\u4f60\u5728\u8fdb\u884c\u4e00\u4e2a\u7b80\u5316\u7248\u7684\u5403\u8c46\u4eba\u6e38\u620f\u3002\u4f60\u4ece [0, 0] \u70b9\u5f00\u59cb\u51fa\u53d1\uff0c\u4f60\u7684\u76ee\u7684\u5730\u662f \xa0target = [xtarget, ytarget] \u3002\u5730\u56fe\u4e0a\u6709\u4e00\u4e9b\u963b\u788d\u8005\uff0c\u4ee5\u6570\u7ec4 ghosts \u7ed9\u51fa\uff0c\u7b2c i \u4e2a\u963b\u788d\u8005\u4ece \xa0ghosts[i] = [xi, yi]\xa0 \u51fa\u53d1\u3002\u6240\u6709\u8f93\u5165\u5747\u4e3a \u6574\u6570\u5750\u6807 \u3002\\n\\n\u6bcf\u4e00\u56de\u5408\uff0c\u4f60\u548c\u963b\u788d\u8005\u4eec\u53ef\u4ee5\u540c\u65f6\u5411\u4e1c\uff0c\u897f\uff0c\u5357\uff0c\u5317\u56db\u4e2a\u65b9\u5411\u79fb\u52a8\uff0c\u6bcf\u6b21\u53ef\u4ee5\u79fb\u52a8\u5230\u8ddd\u79bb\u539f\u4f4d\u7f6e 1 \u4e2a\u5355\u4f4d \u7684\u65b0\u4f4d\u7f6e\u3002\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9 \u4e0d\u52a8 \u3002\u6240\u6709\u52a8\u4f5c \u540c\u65f6 \u53d1\u751f\u3002\\n\\n\u5982\u679c\u4f60\u53ef\u4ee5\u5728\u4efb\u4f55\u963b\u788d\u8005\u6293\u4f4f\u4f60 \u4e4b\u524d \u5230\u8fbe\u76ee\u7684\u5730\uff08\u963b\u788d\u8005\u53ef\u4ee5\u91c7\u53d6\u4efb\u610f\u884c\u52a8\u65b9\u5f0f\uff09\uff0c\u5219\u88ab\u89c6\u4e3a\u9003\u8131\u6210\u529f\u3002\u5982\u679c\u4f60\u548c\u963b\u788d\u8005\u540c\u65f6\u5230\u8fbe\u4e86\u4e00\u4e2a\u4f4d\u7f6e\uff08\u5305\u62ec\u76ee\u7684\u5730\uff09\u90fd\u4e0d\u7b97\u662f\u9003\u8131\u6210\u529f\u3002\\n\\n\u53ea\u6709\u5728\u4f60\u6709\u53ef\u80fd\u6210\u529f\u9003\u8131\u65f6\uff0c\u8f93\u51fa true \uff1b\u5426\u5219\uff0c\u8f93\u51fa false \u3002\\n\\n\u793a\u4f8b 1\uff1a\\n\\n```\\n\u8f93\u5165\uff1aghosts = [[1,0],[0,3]], target = [0,1]\\n\u8f93\u51fa\uff1atrue\\n\u89e3\u91ca\uff1a\u4f60\u53ef\u4ee5\u76f4\u63a5\u4e00\u6b65\u5230\u8fbe\u76ee\u7684\u5730 (0,1) \uff0c\u5728 (1, 0) \u6216\u8005 (0, 3) \u4f4d\u7f6e\u7684\u963b\u788d\u8005\u90fd\u4e0d\u53ef\u80fd\u6293\u4f4f\u4f60\u3002\\n```\\n\\n\u793a\u4f8b 2\uff1a\\n\\n```\\n\u8f93\u5165\uff1aghosts = [[1,0]], target = [2,0]\\n\u8f93\u51fa\uff1afalse\\n\u89e3\u91ca\uff1a\u4f60\u9700\u8981\u8d70\u5230\u4f4d\u4e8e (2, 0) \u7684\u76ee\u7684\u5730\uff0c\u4f46\u662f\u5728 (1, 0) \u7684\u963b\u788d\u8005\u4f4d\u4e8e\u4f60\u548c\u76ee\u7684\u5730\u4e4b\u95f4\u3002\\n```\\n\\n\u793a\u4f8b 3\uff1a\\n\\n```\\n\u8f93\u5165\uff1aghosts = [[2,0]], target = [1,0]\\n\u8f93\u51fa\uff1afalse\\n\u89e3\u91ca\uff1a\u963b\u788d\u8005\u53ef\u4ee5\u548c\u4f60\u540c\u65f6\u8fbe\u5230\u76ee\u7684\u5730\u3002\\n```\\n\\n\u793a\u4f8b 4\uff1a\\n\\n```\\n\u8f93\u5165\uff1aghosts = [[5,0],[-10,-2],[0,-5],[-2,-2],[-7,1]], target = [7,7]\\n\u8f93\u51fa\uff1afalse\\n```\\n\\n\u793a\u4f8b 5\uff1a\\n\\n```\\n\u8f93\u5165\uff1aghosts = [[-1,0],[0,1],[-1,0],[0,1],[-1,0]], target = [0,0]\\n\u8f93\u51fa\uff1atrue\\n```\\n\\n\u63d0\u793a\uff1a\\n\\n```\\n1 <= ghosts.length <= 100\\nghosts[i].length == 2\\n-104 <= xi, yi <= 104\\n\u540c\u4e00\u4f4d\u7f6e\u53ef\u80fd\u6709 \u591a\u4e2a\u963b\u788d\u8005 \u3002\\ntarget.length == 2\\n-104 <= xtarget, ytarget <= 104\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/escape-the-ghosts\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    bool escapeGhosts(vector<vector<int>>& ghosts, vector<int>& target) {\\n        int len = abs(target[0]) + abs(target[1]);\\n        for (auto g : ghosts)\\n        {\\n            if (abs(g[0] - target[0]) + abs(g[1] - target[1]) <= len)\\n            {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```"},{"id":"443","metadata":{"permalink":"/leetcode/443","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-08-21-443.md","source":"@site/blog/2021-08-21-443.md","title":"443 \u538b\u7f29\u5b57\u7b26\u4e32","description":"\u6700\u7b80\u5355\u7684\u60f3\u6cd5\u5e94\u8be5\u662f\u904d\u5386\u4e00\u6bb5\uff0c\u5f80\u5411\u91cf\u6700\u540e push \u4e00\u6bb5\uff0c\u4f46\u662f\u8981\u6c42\u7528\u5e38\u91cf\u7a7a\u95f4\uff0c\u6240\u4ee5\u5e94\u8be5\u662f\u8981\u7528\u539f\u5730\u4fee\u6539\u7684\u65b9\u5f0f\uff08\u4f46\u8fd9\u65b9\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u9ad8\u4e86\u4e00\u4e9b\uff09","date":"2021-08-21T00:00:00.000Z","formattedDate":"August 21, 2021","tags":[{"label":"\u53cc\u6307\u9488","permalink":"/leetcode/tags/\u53cc\u6307\u9488"},{"label":"\u8fed\u4ee3\u5668","permalink":"/leetcode/tags/\u8fed\u4ee3\u5668"},{"label":"\u5b57\u7b26\u4e32","permalink":"/leetcode/tags/\u5b57\u7b26\u4e32"}],"readingTime":3.48,"truncated":true,"authors":[],"prevItem":{"title":"789 \u9003\u8131\u963b\u788d\u8005","permalink":"/leetcode/789"},"nextItem":{"title":"1137 \u7b2cN\u4e2a\u6cf0\u6ce2\u90a3\u5951\u6570","permalink":"/leetcode/1137"}},"content":"\u6700\u7b80\u5355\u7684\u60f3\u6cd5\u5e94\u8be5\u662f\u904d\u5386\u4e00\u6bb5\uff0c\u5f80\u5411\u91cf\u6700\u540e push \u4e00\u6bb5\uff0c\u4f46\u662f\u8981\u6c42\u7528\u5e38\u91cf\u7a7a\u95f4\uff0c\u6240\u4ee5\u5e94\u8be5\u662f\u8981\u7528\u539f\u5730\u4fee\u6539\u7684\u65b9\u5f0f\uff08\u4f46\u8fd9\u65b9\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u9ad8\u4e86\u4e00\u4e9b\uff09\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u9898\u76ee\\n\\n\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4 chars \uff0c\u8bf7\u4f7f\u7528\u4e0b\u8ff0\u7b97\u6cd5\u538b\u7f29\uff1a\\n\\n\u4ece\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32 s \u5f00\u59cb\u3002\u5bf9\u4e8e chars \u4e2d\u7684\u6bcf\u7ec4 \u8fde\u7eed\u91cd\u590d\u5b57\u7b26 \uff1a\\n\\n\u5982\u679c\u8fd9\u4e00\u7ec4\u957f\u5ea6\u4e3a 1 \uff0c\u5219\u5c06\u5b57\u7b26\u8ffd\u52a0\u5230 s \u4e2d\u3002\\n\u5426\u5219\uff0c\u9700\u8981\u5411 s \u8ffd\u52a0\u5b57\u7b26\uff0c\u540e\u8ddf\u8fd9\u4e00\u7ec4\u7684\u957f\u5ea6\u3002\\n\u538b\u7f29\u540e\u5f97\u5230\u7684\u5b57\u7b26\u4e32 s \u4e0d\u5e94\u8be5\u76f4\u63a5\u8fd4\u56de \uff0c\u9700\u8981\u8f6c\u50a8\u5230\u5b57\u7b26\u6570\u7ec4 chars \u4e2d\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u7ec4\u957f\u5ea6\u4e3a 10 \u6216 10 \u4ee5\u4e0a\uff0c\u5219\u5728 chars \u6570\u7ec4\u4e2d\u4f1a\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u5b57\u7b26\u3002\\n\\n\u8bf7\u5728 \u4fee\u6539\u5b8c\u8f93\u5165\u6570\u7ec4\u540e \uff0c\u8fd4\u56de\u8be5\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u3002\\n\\n\u4f60\u5fc5\u987b\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e00\u4e2a\u53ea\u4f7f\u7528\u5e38\u91cf\u989d\u5916\u7a7a\u95f4\u7684\u7b97\u6cd5\u6765\u89e3\u51b3\u6b64\u95ee\u9898\u3002\\n\\n\u793a\u4f8b 1\uff1a\\n\\n```\\n\u8f93\u5165\uff1achars = [\\"a\\",\\"a\\",\\"b\\",\\"b\\",\\"c\\",\\"c\\",\\"c\\"]\\n\u8f93\u51fa\uff1a\u8fd4\u56de 6 \uff0c\u8f93\u5165\u6570\u7ec4\u7684\u524d 6 \u4e2a\u5b57\u7b26\u5e94\u8be5\u662f\uff1a[\\"a\\",\\"2\\",\\"b\\",\\"2\\",\\"c\\",\\"3\\"]\\n\u89e3\u91ca\uff1a\\n\\"aa\\" \u88ab \\"a2\\" \u66ff\u4ee3\u3002\\"bb\\" \u88ab \\"b2\\" \u66ff\u4ee3\u3002\\"ccc\\" \u88ab \\"c3\\" \u66ff\u4ee3\u3002\\n```\\n\\n\u793a\u4f8b 2\uff1a\\n\\n```\\n\u8f93\u5165\uff1achars = [\\"a\\"]\\n\u8f93\u51fa\uff1a\u8fd4\u56de 1 \uff0c\u8f93\u5165\u6570\u7ec4\u7684\u524d 1 \u4e2a\u5b57\u7b26\u5e94\u8be5\u662f\uff1a[\\"a\\"]\\n\u89e3\u91ca\uff1a\\n\u6ca1\u6709\u4efb\u4f55\u5b57\u7b26\u4e32\u88ab\u66ff\u4ee3\u3002\\n```\\n\\n\u793a\u4f8b 3\uff1a\\n\\n```\\n\u8f93\u5165\uff1achars = [\\"a\\",\\"b\\",\\"b\\",\\"b\\",\\"b\\",\\"b\\",\\"b\\",\\"b\\",\\"b\\",\\"b\\",\\"b\\",\\"b\\",\\"b\\"]\\n\u8f93\u51fa\uff1a\u8fd4\u56de 4 \uff0c\u8f93\u5165\u6570\u7ec4\u7684\u524d 4 \u4e2a\u5b57\u7b26\u5e94\u8be5\u662f\uff1a[\\"a\\",\\"b\\",\\"1\\",\\"2\\"]\u3002\\n\u89e3\u91ca\uff1a\\n\u7531\u4e8e\u5b57\u7b26 \\"a\\" \u4e0d\u91cd\u590d\uff0c\u6240\u4ee5\u4e0d\u4f1a\u88ab\u538b\u7f29\u3002\\"bbbbbbbbbbbb\\" \u88ab \u201cb12\u201d \u66ff\u4ee3\u3002\\n\u6ce8\u610f\u6bcf\u4e2a\u6570\u5b57\u5728\u6570\u7ec4\u4e2d\u90fd\u6709\u5b83\u81ea\u5df1\u7684\u4f4d\u7f6e\u3002\\n```\\n\\n\u63d0\u793a\uff1a\\n\\n```\\n1 <= chars.length <= 2000\\nchars[i] \u53ef\u4ee5\u662f\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3001\u5927\u5199\u82f1\u6587\u5b57\u6bcd\u3001\u6570\u5b57\u6216\u7b26\u53f7\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/string-compression\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n\u975e\u5e38\u91cf\u7a7a\u95f4\u505a\u6cd5\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int compress(vector<char> &chars) {\\n        int len = chars.size();\\n        char current = chars[0];\\n        int cnt = 1;\\n        for (int i = 1; i < len; ++i)\\n        {\\n            if (chars[i] == current)\\n            {\\n                cnt += 1;\\n                continue;\\n            }\\n            if (cnt == 1)\\n            {\\n                chars.push_back(current);\\n                current = chars[i];\\n                cnt = 1;\\n            }\\n            else\\n            {\\n                chars.push_back(current);\\n                current = chars[i];\\n                auto s = std::to_string(cnt);\\n                for (auto c : s)\\n                {\\n                    chars.push_back(c);\\n                }\\n                cnt = 1;\\n            }\\n        }\\n\\n        chars.push_back(current);\\n        if (cnt != 1)\\n        {\\n            auto s = std::to_string(cnt);\\n            for (auto c : s)\\n            {\\n                chars.push_back(c);\\n            }\\n        }\\n\\n        chars.erase(chars.begin(), chars.begin() + len);\\n        return chars.size();\\n    }\\n};\\n```\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int compress(vector<char> &chars) {\\n        int len = chars.size();\\n        int lo = 0;\\n        int hi = 0;\\n        int write = 0;\\n        while (lo < len)\\n        {\\n            while (hi < len && chars[lo] == chars[hi])\\n            {\\n                hi += 1;\\n            }\\n            chars[write] = chars[lo];\\n            write += 1;\\n            if (hi - lo == 1)\\n            {\\n            }\\n            else\\n            {\\n                int w = write;\\n                int cnt = hi - lo;\\n                while (cnt != 0)\\n                {\\n                    chars[write] = \'0\' + cnt % 10;\\n                    write += 1;\\n                    cnt /= 10;\\n                }\\n                reverse(chars.begin() + w, chars.begin() + write);\\n            }\\n            lo = hi;\\n        }\\n        chars.erase(chars.begin() + write, chars.end());\\n        return write;\\n    }\\n};\\n```"},{"id":"1137","metadata":{"permalink":"/leetcode/1137","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-08-20-1137.md","source":"@site/blog/2021-08-20-1137.md","title":"1137 \u7b2cN\u4e2a\u6cf0\u6ce2\u90a3\u5951\u6570","description":"\u5f88\u7ecf\u5178\uff1f\u968f\u624b\u5199\u4e2a\u9012\u63a8\u662f\u5bb9\u6613\u7684\uff0c\u6bd4\u9012\u5f52\u7701\u8c03\u7528\u6808\uff0c\u6bd4\u52a8\u5f52\u7701\u7a7a\u95f4\u3002\u77e9\u9635\u5feb\u901f\u5e42\u80fd\u60f3\u5230\uff0ccpp \u4e0d\u662f\u90a3\u4e48\u597d\u5199\u3002\u6253\u8868\u5c31\u2026\u2026","date":"2021-08-20T00:00:00.000Z","formattedDate":"August 20, 2021","tags":[{"label":"\u52a8\u6001\u89c4\u5212","permalink":"/leetcode/tags/\u52a8\u6001\u89c4\u5212"},{"label":"\u9012\u5f52","permalink":"/leetcode/tags/\u9012\u5f52"},{"label":"\u9012\u63a8","permalink":"/leetcode/tags/\u9012\u63a8"},{"label":"\u77e9\u9635\u5feb\u901f\u5e42","permalink":"/leetcode/tags/\u77e9\u9635\u5feb\u901f\u5e42"},{"label":"\u6253\u8868","permalink":"/leetcode/tags/\u6253\u8868"}],"readingTime":1.46,"truncated":true,"authors":[],"prevItem":{"title":"443 \u538b\u7f29\u5b57\u7b26\u4e32","permalink":"/leetcode/443"},"nextItem":{"title":"53 \u6700\u5927\u5b50\u5e8f\u548c","permalink":"/leetcode/53"}},"content":"\u5f88\u7ecf\u5178\uff1f\u968f\u624b\u5199\u4e2a\u9012\u63a8\u662f\u5bb9\u6613\u7684\uff0c\u6bd4\u9012\u5f52\u7701\u8c03\u7528\u6808\uff0c\u6bd4\u52a8\u5f52\u7701\u7a7a\u95f4\u3002\u77e9\u9635\u5feb\u901f\u5e42\u80fd\u60f3\u5230\uff0ccpp \u4e0d\u662f\u90a3\u4e48\u597d\u5199\u3002\u6253\u8868\u5c31\u2026\u2026\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u9898\u76ee\\n\\n\u6cf0\u6ce2\u90a3\u5951\u5e8f\u5217 \xa0Tn\xa0 \u5b9a\u4e49\u5982\u4e0b\uff1a\\n\\nT0 = 0, T1 = 1, T2 = 1, \u4e14\u5728 n >= 0\xa0 \u7684\u6761\u4ef6\u4e0b Tn+3 = Tn + Tn+1 + Tn+2\\n\\n\u7ed9\u4f60\u6574\u6570 \xa0n\uff0c\u8bf7\u8fd4\u56de\u7b2c n \u4e2a\u6cf0\u6ce2\u90a3\u5951\u6570 \xa0Tn \u7684\u503c\u3002\\n\\n\u793a\u4f8b 1\uff1a\\n\\n```\\n\u8f93\u5165\uff1an = 4\\n\u8f93\u51fa\uff1a4\\n\u89e3\u91ca\uff1a\\nT_3 = 0 + 1 + 1 = 2\\nT_4 = 1 + 1 + 2 = 4\\n```\\n\\n\u793a\u4f8b 2\uff1a\\n\\n```\\n\u8f93\u5165\uff1an = 25\\n\u8f93\u51fa\uff1a1389537\\n```\\n\\n\u63d0\u793a\uff1a\\n\\n```\\n0 <= n <= 37\\n\u7b54\u6848\u4fdd\u8bc1\u662f\u4e00\u4e2a 32 \u4f4d\u6574\u6570\uff0c\u5373\xa0answer <= 2^31 - 1\u3002\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/n-th-tribonacci-number\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int tribonacci(int n) {\\n        if (n == 0) {\\n            return 0;\\n        }\\n        if (n < 3) {\\n            return 1;\\n        }\\n        int t0 = 0;\\n        int t1 = 1;\\n        int t2 = 1;\\n        int tmp;\\n        for (int i = 2; i < n; ++i) {\\n            tmp = t0 + t1 + t2;\\n            t0 = t1;\\n            t1 = t2;\\n            t2 = tmp;\\n        }\\n        return t2;\\n    }\\n};\\n```"},{"id":"53","metadata":{"permalink":"/leetcode/53","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-08-20-53.md","source":"@site/blog/2021-08-20-53.md","title":"53 \u6700\u5927\u5b50\u5e8f\u548c","description":"\u4e00\u7ef4\u52a8\u6001\u89c4\u5212\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u524d\u7f00\u548c\u3002\u53ef\u4ee5\u968f\u624b O(n) \u7684\u904d\u5386\u8fdb\u884c\u89e3\u51b3\uff0c\u4e0d\u8fc7\u8fd9\u6837\u4f3c\u4e4e\u6ca1\u5565\u53ef\u6269\u5c55\u7684\u3002\u4e4b\u540e\u7814\u7a76\u7814\u7a76\u80fd\u5426\u6539\u4e3a\u4efb\u610f\u4e00\u6bb5\u4e2d\u627e\u5b50\u5e8f\u548c\u3002","date":"2021-08-20T00:00:00.000Z","formattedDate":"August 20, 2021","tags":[{"label":"\u52a8\u6001\u89c4\u5212","permalink":"/leetcode/tags/\u52a8\u6001\u89c4\u5212"},{"label":"\u524d\u7f00\u548c","permalink":"/leetcode/tags/\u524d\u7f00\u548c"}],"readingTime":1.555,"truncated":true,"authors":[],"prevItem":{"title":"1137 \u7b2cN\u4e2a\u6cf0\u6ce2\u90a3\u5951\u6570","permalink":"/leetcode/1137"},"nextItem":{"title":"541 \u53cd\u8f6c\u5b57\u7b26\u4e32 II","permalink":"/leetcode/541"}},"content":"\u4e00\u7ef4\u52a8\u6001\u89c4\u5212\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u524d\u7f00\u548c\u3002\u53ef\u4ee5\u968f\u624b O(n) \u7684\u904d\u5386\u8fdb\u884c\u89e3\u51b3\uff0c\u4e0d\u8fc7\u8fd9\u6837\u4f3c\u4e4e\u6ca1\u5565\u53ef\u6269\u5c55\u7684\u3002\u4e4b\u540e\u7814\u7a76\u7814\u7a76\u80fd\u5426\u6539\u4e3a\u4efb\u610f\u4e00\u6bb5\u4e2d\u627e\u5b50\u5e8f\u548c\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u9898\u76ee\\n\\n\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums\xa0\uff0c\u627e\u5230\u4e00\u4e2a\u5177\u6709\u6700\u5927\u548c\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\uff08\u5b50\u6570\u7ec4\u6700\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u8fd4\u56de\u5176\u6700\u5927\u548c\u3002\\n\\n\u793a\u4f8b 1\uff1a\\n\\n```\\n\u8f93\u5165\uff1anums = [-2,1,-3,4,-1,2,1,-5,4]\\n\u8f93\u51fa\uff1a6\\n\u89e3\u91ca\uff1a\u8fde\u7eed\u5b50\u6570\u7ec4\xa0[4,-1,2,1] \u7684\u548c\u6700\u5927\uff0c\u4e3a\xa06 \u3002\\n```\\n\\n\u793a\u4f8b 2\uff1a\\n\\n```\\n\u8f93\u5165\uff1anums = [1]\\n\u8f93\u51fa\uff1a1\\n```\\n\\n\u793a\u4f8b 3\uff1a\\n\\n```\\n\u8f93\u5165\uff1anums = [0]\\n\u8f93\u51fa\uff1a0\\n```\\n\\n\u793a\u4f8b 4\uff1a\\n\\n```\\n\u8f93\u5165\uff1anums = [-1]\\n\u8f93\u51fa\uff1a-1\\n```\\n\\n\u793a\u4f8b 5\uff1a\\n\\n```\\n\u8f93\u5165\uff1anums = [-100000]\\n\u8f93\u51fa\uff1a-100000\\n```\\n\\n\u63d0\u793a\uff1a\\n\\n```\\n1 <= nums.length <= 3 * 104\\n-105 <= nums[i] <= 105\\n```\\n\\n\u8fdb\u9636\uff1a\u5982\u679c\u4f60\u5df2\u7ecf\u5b9e\u73b0\u590d\u6742\u5ea6\u4e3a O(n) \u7684\u89e3\u6cd5\uff0c\u5c1d\u8bd5\u4f7f\u7528\u66f4\u4e3a\u7cbe\u5999\u7684 \u5206\u6cbb\u6cd5 \u6c42\u89e3\u3002\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/maximum-subarray\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int maxSubArray(vector<int>& nums) {\\n        int ans = -100001;\\n        int tmp = -100001;\\n        for (auto n : nums)\\n        {\\n            tmp = max(n, tmp + n);\\n            ans = max(tmp, ans);\\n        }\\n        return ans;\\n    }\\n};\\n```"},{"id":"541","metadata":{"permalink":"/leetcode/541","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-08-20-541.md","source":"@site/blog/2021-08-20-541.md","title":"541 \u53cd\u8f6c\u5b57\u7b26\u4e32 II","description":"\u7528\u5faa\u73af\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5199\u51fa\u4e00\u4e2a\u6548\u7387\u4e0d\u9ad8\u7684\u5b9e\u73b0\uff0c\u7136\u540e\u53d1\u73b0\u8fed\u4ee3\u5668\u771f\u597d\u7528 orz","date":"2021-08-20T00:00:00.000Z","formattedDate":"August 20, 2021","tags":[{"label":"\u53cc\u6307\u9488","permalink":"/leetcode/tags/\u53cc\u6307\u9488"},{"label":"\u8fed\u4ee3\u5668","permalink":"/leetcode/tags/\u8fed\u4ee3\u5668"}],"readingTime":1.9,"truncated":true,"authors":[],"prevItem":{"title":"53 \u6700\u5927\u5b50\u5e8f\u548c","permalink":"/leetcode/53"},"nextItem":{"title":"58 \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6","permalink":"/leetcode/58"}},"content":"\u7528\u5faa\u73af\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5199\u51fa\u4e00\u4e2a\u6548\u7387\u4e0d\u9ad8\u7684\u5b9e\u73b0\uff0c\u7136\u540e\u53d1\u73b0\u8fed\u4ee3\u5668\u771f\u597d\u7528 orz\\n\\n\x3c!--truncate--\x3e\\n\\n## \u9898\u76ee\\n\\n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \u548c\u4e00\u4e2a\u6574\u6570 k\uff0c\u4ece\u5b57\u7b26\u4e32\u5f00\u5934\u7b97\u8d77\uff0c\u6bcf 2k \u4e2a\u5b57\u7b26\u53cd\u8f6c\u524d k \u4e2a\u5b57\u7b26\u3002\\n\\n\u5982\u679c\u5269\u4f59\u5b57\u7b26\u5c11\u4e8e k \u4e2a\uff0c\u5219\u5c06\u5269\u4f59\u5b57\u7b26\u5168\u90e8\u53cd\u8f6c\u3002\\n\u5982\u679c\u5269\u4f59\u5b57\u7b26\u5c0f\u4e8e 2k \u4f46\u5927\u4e8e\u6216\u7b49\u4e8e k \u4e2a\uff0c\u5219\u53cd\u8f6c\u524d k \u4e2a\u5b57\u7b26\uff0c\u5176\u4f59\u5b57\u7b26\u4fdd\u6301\u539f\u6837\u3002\\n\\n\\n\\n\u793a\u4f8b 1\uff1a\\n\\n```\\n\u8f93\u5165\uff1as = \\"abcdefg\\", k = 2\\n\u8f93\u51fa\uff1a\\"bacdfeg\\"\\n```\\n\\n\u793a\u4f8b 2\uff1a\\n\\n```\\n\u8f93\u5165\uff1as = \\"abcd\\", k = 2\\n\u8f93\u51fa\uff1a\\"bacd\\"\\n```\\n\\n\u63d0\u793a\uff1a\\n\\n```\\n1 <= s.length <= 104\\ns \u4ec5\u7531\u5c0f\u5199\u82f1\u6587\u7ec4\u6210\\n1 <= k <= 104\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/reverse-string-ii\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    string reverseStr(string s, int k) {\\n        int len = s.length();\\n        int len_ = len - 1;\\n        int lo = 0;\\n        int hi = 0;\\n        int kk = k - 1;\\n\\n        while (lo <= len)\\n        {\\n            while (hi - lo < kk)\\n            {\\n                hi += 1;\\n                if (hi == len_)\\n                {\\n                    break;\\n                }\\n            }\\n            if (hi > len_)\\n            {\\n                break;\\n            }\\n            int h = hi + 1 + k;\\n            while (lo < hi)\\n            {\\n                s[lo] = s[lo] ^ s[hi];\\n                s[hi] = s[lo] ^ s[hi];\\n                s[lo] = s[lo] ^ s[hi];\\n                lo += 1;\\n                hi -= 1;\\n            }\\n            lo = h;\\n            hi = h;\\n        }\\n        return s;\\n    }\\n};\\n```\\n\\n```cpp\\nclass Solution {\\npublic:\\n    string reverseStr(string s, int k) {\\n        int len = s.length();\\n        int k2 = 2 * k;\\n        for (int i = 0; i < len; i += k2)\\n        {\\n            reverse(s.begin() + i, s.begin() + min(i + k, len));\\n        }\\n        return s;\\n    }\\n};\\n```"},{"id":"58","metadata":{"permalink":"/leetcode/58","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-08-20-58.md","source":"@site/blog/2021-08-20-58.md","title":"58 \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6","description":"\u975e\u5e38\u7b80\u5355\uff0c\u53cd\u5411\u904d\u5386\u5373\u53ef\u3002\u5b66\u4e60\u4e86\u4e00\u4e0b C++ \u4e2d\u7684\u8fed\u4ee3\u5668\u4f7f\u7528\uff0c\u4e0d\u8fc7\u6ca1\u80fd\u7b80\u5355\u7684\u641e\u6210 range loop\u3002","date":"2021-08-20T00:00:00.000Z","formattedDate":"August 20, 2021","tags":[{"label":"\u5b57\u7b26\u4e32","permalink":"/leetcode/tags/\u5b57\u7b26\u4e32"},{"label":"\u8fed\u4ee3\u5668","permalink":"/leetcode/tags/\u8fed\u4ee3\u5668"}],"readingTime":1.37,"truncated":true,"authors":[],"prevItem":{"title":"541 \u53cd\u8f6c\u5b57\u7b26\u4e32 II","permalink":"/leetcode/541"},"nextItem":{"title":"345 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd","permalink":"/leetcode/345"}},"content":"\u975e\u5e38\u7b80\u5355\uff0c\u53cd\u5411\u904d\u5386\u5373\u53ef\u3002\u5b66\u4e60\u4e86\u4e00\u4e0b C++ \u4e2d\u7684\u8fed\u4ee3\u5668\u4f7f\u7528\uff0c\u4e0d\u8fc7\u6ca1\u80fd\u7b80\u5355\u7684\u641e\u6210 range loop\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u9898\u76ee\\n\\n\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s\uff0c\u7531\u82e5\u5e72\u5355\u8bcd\u7ec4\u6210\uff0c\u5355\u8bcd\u524d\u540e\u7528\u4e00\u4e9b\u7a7a\u683c\u5b57\u7b26\u9694\u5f00\u3002\u8fd4\u56de\u5b57\u7b26\u4e32\u4e2d\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002\\n\\n\u5355\u8bcd \u662f\u6307\u4ec5\u7531\u5b57\u6bcd\u7ec4\u6210\u3001\u4e0d\u5305\u542b\u4efb\u4f55\u7a7a\u683c\u5b57\u7b26\u7684\u6700\u5927\u5b50\u5b57\u7b26\u4e32\u3002\\n\\n\u793a\u4f8b 1\uff1a\\n\\n```\\n\u8f93\u5165\uff1as = \\"Hello World\\"\\n\u8f93\u51fa\uff1a5\\n```\\n\\n\u793a\u4f8b 2\uff1a\\n\\n```\\n\u8f93\u5165\uff1as = \\"   fly me   to   the moon  \\"\\n\u8f93\u51fa\uff1a4\\n```\\n\\n\u793a\u4f8b 3\uff1a\\n\\n```\\n\u8f93\u5165\uff1as = \\"luffy is still joyboy\\"\\n\u8f93\u51fa\uff1a6\\n```\\n\\n\u63d0\u793a\uff1a\\n\\n```\\n1 <= s.length <= 104\\ns \u4ec5\u6709\u82f1\u6587\u5b57\u6bcd\u548c\u7a7a\u683c \' \' \u7ec4\u6210\\ns \u4e2d\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u5355\u8bcd\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/length-of-last-word\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int lengthOfLastWord(string s) {\\n        int len = 0;\\n        for (auto c = s.rbegin(); c != s.rend(); ++c){\\n            if (*c == \' \') {\\n                if (len == 0) {\\n                    continue;\\n                }\\n                break;\\n            }\\n            len += 1;\\n        }\\n        return len;\\n    }\\n};\\n```"},{"id":"345","metadata":{"permalink":"/leetcode/345","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-08-19-345.md","source":"@site/blog/2021-08-19-345.md","title":"345 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd","description":"\u4f7f\u7528\u53cc\u6307\u9488\uff0c\u5faa\u73af\u5c31\u597d\u4e86\u3002\u53ef\u80fd\u8fd8\u6709\u66f4\u597d\u7684\u5b9e\u73b0\uff1f\u4f46\u662f\u904d\u5386\u5c31\u662f O(n) ...","date":"2021-08-19T00:00:00.000Z","formattedDate":"August 19, 2021","tags":[{"label":"\u53cc\u6307\u9488","permalink":"/leetcode/tags/\u53cc\u6307\u9488"},{"label":"\u5b57\u7b26\u4e32","permalink":"/leetcode/tags/\u5b57\u7b26\u4e32"}],"readingTime":1.27,"truncated":true,"authors":[],"prevItem":{"title":"58 \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6","permalink":"/leetcode/58"},"nextItem":{"title":"930 \u548c\u76f8\u540c\u7684\u4e8c\u5143\u5b50\u6570\u7ec4","permalink":"/leetcode/930"}},"content":"\u4f7f\u7528\u53cc\u6307\u9488\uff0c\u5faa\u73af\u5c31\u597d\u4e86\u3002\u53ef\u80fd\u8fd8\u6709\u66f4\u597d\u7684\u5b9e\u73b0\uff1f\u4f46\u662f\u904d\u5386\u5c31\u662f O(n) ...\\n\\n\u987a\u4fbf A.E.I.O.U\\n\\n\x3c!--truncate--\x3e\\n\\n## \u9898\u76ee\\n\\n\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u4ec5\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5143\u97f3\u5b57\u6bcd\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u5b57\u7b26\u4e32\u3002\\n\\n\u5143\u97f3\u5b57\u6bcd\u5305\u62ec \'a\'\u3001\'e\'\u3001\'i\'\u3001\'o\'\u3001\'u\'\uff0c\u4e14\u53ef\u80fd\u4ee5\u5927\u5c0f\u5199\u4e24\u79cd\u5f62\u5f0f\u51fa\u73b0\u3002\\n\\n\u793a\u4f8b 1\uff1a\\n\\n```\\n\u8f93\u5165\uff1as = \\"hello\\"\\n\u8f93\u51fa\uff1a\\"holle\\"\\n\u793a\u4f8b 2\uff1a\\n```\\n\\n```\\n\u8f93\u5165\uff1as = \\"leetcode\\"\\n\u8f93\u51fa\uff1a\\"leotcede\\"\\n```\\n\\n\u63d0\u793a\uff1a\\n\\n```\\n1 <= s.length <= 3 \\\\* 105\\ns \u7531 \u53ef\u6253\u5370\u7684 ASCII \u5b57\u7b26\u7ec4\u6210\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/reverse-vowels-of-a-string\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    string reverseVowels(string s) {\\n        int start = 0;\\n        int end = s.length() - 1;\\n        while (start < end)\\n        {\\n            while (!strchr(\\"aeiouAEIOU\\", s[start]) && start < end)\\n            {\\n                start += 1;\\n            }\\n            while (!strchr(\\"aeiouAEIOU\\", s[end]) && end > start)\\n            {\\n                end -= 1;\\n            }\\n            if (start < end)\\n            {\\n                char tmp = s[start];\\n                s[start] = s[end];\\n                s[end] = tmp;\\n                start += 1;\\n                end -= 1;\\n            }\\n            else\\n            {\\n                break;\\n            }\\n        }\\n        return s;\\n    }\\n};\\n```"},{"id":"930","metadata":{"permalink":"/leetcode/930","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-07-08-930.md","source":"@site/blog/2021-07-08-930.md","title":"930 \u548c\u76f8\u540c\u7684\u4e8c\u5143\u5b50\u6570\u7ec4","description":"\u8fd9\u662f\u4e00\u9053\u638c\u63e1\u524d\u7f00\u548c\u4e0e HashMap \u540e\u53ef\u4ee5\u5feb\u901f\u5199\u51fa\u6765\u7684\u9898\uff0c\u6ca1\u638c\u63e1\u5c31\u9ebb\u70e6\u4e86 orz","date":"2021-07-08T00:00:00.000Z","formattedDate":"July 8, 2021","tags":[{"label":"\u524d\u7f00\u548c","permalink":"/leetcode/tags/\u524d\u7f00\u548c"},{"label":"HashMap","permalink":"/leetcode/tags/hash-map"}],"readingTime":1.425,"truncated":true,"authors":[],"prevItem":{"title":"345 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd","permalink":"/leetcode/345"},"nextItem":{"title":"1833 \u96ea\u7cd5\u7684\u6700\u5927\u6570\u91cf","permalink":"/leetcode/1833"}},"content":"\u8fd9\u662f\u4e00\u9053\u638c\u63e1\u524d\u7f00\u548c\u4e0e HashMap \u540e\u53ef\u4ee5\u5feb\u901f\u5199\u51fa\u6765\u7684\u9898\uff0c\u6ca1\u638c\u63e1\u5c31\u9ebb\u70e6\u4e86 orz\\n\\n\x3c!--truncate--\x3e\\n\\n## \u9898\u76ee\\n\\n\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u5143\u6570\u7ec4 nums \uff0c\u548c\u4e00\u4e2a\u6574\u6570 goal \uff0c\u8bf7\u4f60\u7edf\u8ba1\u5e76\u8fd4\u56de\u6709\u591a\u5c11\u4e2a\u548c\u4e3a goal \u7684 \u975e\u7a7a \u5b50\u6570\u7ec4\u3002\\n\\n\u5b50\u6570\u7ec4 \u662f\u6570\u7ec4\u7684\u4e00\u6bb5\u8fde\u7eed\u90e8\u5206\u3002\\n\\n\u793a\u4f8b 1\uff1a\\n\\n```\\n\u8f93\u5165\uff1anums = [1,0,1,0,1], goal = 2\\n\u8f93\u51fa\uff1a4\\n\u89e3\u91ca\uff1a\\n\u6709 4 \u4e2a\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u7684\u5b50\u6570\u7ec4\uff1a[1,0,1]\u3001[1,0,1,0]\u3001[0,1,0,1]\u3001[1,0,1]\\n```\\n\\n\u793a\u4f8b 2\uff1a\\n\\n```\\n\u8f93\u5165\uff1anums = [0,0,0,0,0], goal = 0\\n\u8f93\u51fa\uff1a15\\n```\\n\\n\u63d0\u793a\uff1a\\n\\n```\\n1 <= nums.length <= 3 \\\\* 104\\nnums[i] \u4e0d\u662f 0 \u5c31\u662f 1\\n0 <= goal <= nums.length\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/binary-subarrays-with-sum\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nint numSubarraysWithSum(vector<int> &nums, int goal)\\n{\\n    int sum = 0;\\n    unordered_map<int, int> sum_cnt;\\n    int result = 0;\\n    for (auto n : nums)\\n    {\\n        sum_cnt[sum]++;\\n        sum += n;\\n        result += sum_cnt[sum - goal];\\n    }\\n    return result;\\n}\\n```\\n\\n## Rust Solution\\n\\n```rust\\npub fn num_subarrays_with_sum(nums: Vec<i32>, goal: i32) -> i32 {\\n    use std::collections::HashMap;\\n\\n    let mut sum = 0;\\n    let mut sum_cnt = HashMap::new();\\n    let mut result = 0;\\n\\n    for n in nums {\\n        *sum_cnt.entry(sum).or_insert(0) += 1;\\n        sum += n;\\n        result += sum_cnt.get(&(sum - goal)).unwrap_or(&0);\\n    }\\n\\n    result\\n}\\n```"},{"id":"1833","metadata":{"permalink":"/leetcode/1833","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-07-02-1833.md","source":"@site/blog/2021-07-02-1833.md","title":"1833 \u96ea\u7cd5\u7684\u6700\u5927\u6570\u91cf","description":"1833 \u6700\u7b80\u5355\u7684\u505a\u6cd5\u4f3c\u4e4e\u5c31\u662f\u6392\u5e8f\u540e\u6765\u4e2a\u5faa\u73af\u53d6\u3002\u601d\u8003\u4e86\u4e00\u4e0b\u7528\u5c0f\u6839\u5806\u4f3c\u4e4e\u590d\u6742\u5ea6\u5dee\u522b\u4e0d\u662f\u7279\u522b\u5927\u3002\uff08\u6216\u8005\u6211\u592a\u83dc\u4e86\u60f3\u9519\u4e86\uff09","date":"2021-07-02T00:00:00.000Z","formattedDate":"July 2, 2021","tags":[{"label":"\u6392\u5e8f","permalink":"/leetcode/tags/\u6392\u5e8f"},{"label":"\u8d2a\u5fc3","permalink":"/leetcode/tags/\u8d2a\u5fc3"}],"readingTime":2.345,"truncated":true,"authors":[],"prevItem":{"title":"930 \u548c\u76f8\u540c\u7684\u4e8c\u5143\u5b50\u6570\u7ec4","permalink":"/leetcode/930"},"nextItem":{"title":"LCP 07 \u4f20\u9012\u4fe1\u606f","permalink":"/leetcode/lcp07"}},"content":"1833 \u6700\u7b80\u5355\u7684\u505a\u6cd5\u4f3c\u4e4e\u5c31\u662f\u6392\u5e8f\u540e\u6765\u4e2a\u5faa\u73af\u53d6\u3002\u601d\u8003\u4e86\u4e00\u4e0b\u7528\u5c0f\u6839\u5806\u4f3c\u4e4e\u590d\u6742\u5ea6\u5dee\u522b\u4e0d\u662f\u7279\u522b\u5927\u3002\uff08\u6216\u8005\u6211\u592a\u83dc\u4e86\u60f3\u9519\u4e86\uff09\\n\\n\x3c!--truncate--\x3e\\n\\n## \u9898\u76ee\\n\\n\u590f\u65e5\u708e\u708e\uff0c\u5c0f\u7537\u5b69 Tony \u60f3\u4e70\u4e00\u4e9b\u96ea\u7cd5\u6d88\u6d88\u6691\u3002\\n\\n\u5546\u5e97\u4e2d\u65b0\u5230 n \u652f\u96ea\u7cd5\uff0c\u7528\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4 costs \u8868\u793a\u96ea\u7cd5\u7684\u5b9a\u4ef7\uff0c\u5176\u4e2d costs[i] \u8868\u793a\u7b2c i \u652f\u96ea\u7cd5\u7684\u73b0\u91d1\u4ef7\u683c\u3002Tony \u4e00\u5171\u6709 coins \u73b0\u91d1\u53ef\u4ee5\u7528\u4e8e\u6d88\u8d39\uff0c\u4ed6\u60f3\u8981\u4e70\u5c3d\u53ef\u80fd\u591a\u7684\u96ea\u7cd5\u3002\\n\\n\u7ed9\u4f60\u4ef7\u683c\u6570\u7ec4 costs \u548c\u73b0\u91d1\u91cf coins \uff0c\u8bf7\u4f60\u8ba1\u7b97\u5e76\u8fd4\u56de Tony \u7528 coins \u73b0\u91d1\u80fd\u591f\u4e70\u5230\u7684\u96ea\u7cd5\u7684 \u6700\u5927\u6570\u91cf \u3002\\n\\n\u6ce8\u610f\uff1aTony \u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8d2d\u4e70\u96ea\u7cd5\u3002\\n\\n\u793a\u4f8b 1\uff1a\\n\\n```\\n\u8f93\u5165\uff1acosts = [1,3,2,4,1], coins = 7\\n\u8f93\u51fa\uff1a4\\n\u89e3\u91ca\uff1aTony \u53ef\u4ee5\u4e70\u4e0b\u6807\u4e3a 0\u30011\u30012\u30014 \u7684\u96ea\u7cd5\uff0c\u603b\u4ef7\u4e3a 1 + 3 + 2 + 1 = 7\\n```\\n\\n\u793a\u4f8b 2\uff1a\\n\\n```\\n\u8f93\u5165\uff1acosts = [10,6,8,7,7,8], coins = 5\\n\u8f93\u51fa\uff1a0\\n\u89e3\u91ca\uff1aTony \u6ca1\u6709\u8db3\u591f\u7684\u94b1\u4e70\u4efb\u4f55\u4e00\u652f\u96ea\u7cd5\u3002\\n```\\n\\n\u793a\u4f8b 3\uff1a\\n\\n```\\n\u8f93\u5165\uff1acosts = [1,6,3,1,2,5], coins = 20\\n\u8f93\u51fa\uff1a6\\n\u89e3\u91ca\uff1aTony \u53ef\u4ee5\u4e70\u4e0b\u6240\u6709\u7684\u96ea\u7cd5\uff0c\u603b\u4ef7\u4e3a 1 + 6 + 3 + 1 + 2 + 5 = 18 \u3002\\n```\\n\\n\u63d0\u793a\uff1a\\n\\n```\\ncosts.length == n\\n1 <= n <= 105\\n1 <= costs[i] <= 105\\n1 <= coins <= 108\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/maximum-ice-cream-bars\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nint maxIceCream(vector<int> &costs, int coins)\\n{\\n    sort(costs.begin(), costs.end());\\n    int cost = 0, cnt = 0;\\n    for (int i = 0; i < costs.size(); ++i)\\n    {\\n        if (cost + costs[i] <= coins)\\n        {\\n            cost += costs[i];\\n            cnt += 1;\\n        }\\n        else\\n        {\\n            break;\\n        }\\n    }\\n    return cnt;\\n}\\n```\\n\\n## Rust Solution\\n\\n```rust\\nfn max_ice_cream(costs: Vec<i32>, coins: i32) -> i32 {\\n    let mut mut_costs = costs;\\n    mut_costs.sort_unstable();\\n    let (mut cost, mut cnt) = (0, 0);\\n    for i in mut_costs {\\n        if cost + i <= coins {\\n            cost += i;\\n            cnt += 1;\\n        } else {\\n            break;\\n        }\\n    }\\n    cnt\\n}\\n```"},{"id":"lcp07","metadata":{"permalink":"/leetcode/lcp07","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-07-01-lcp07.md","source":"@site/blog/2021-07-01-lcp07.md","title":"LCP 07 \u4f20\u9012\u4fe1\u606f","description":"LCP 07\uff0c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u89e3\u51b3","date":"2021-07-01T00:00:00.000Z","formattedDate":"July 1, 2021","tags":[{"label":"DFS","permalink":"/leetcode/tags/dfs"}],"readingTime":2.99,"truncated":true,"authors":[],"prevItem":{"title":"1833 \u96ea\u7cd5\u7684\u6700\u5927\u6570\u91cf","permalink":"/leetcode/1833"},"nextItem":{"title":"Hello","permalink":"/leetcode/hello-world"}},"content":"LCP 07\uff0c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u89e3\u51b3\\n\\n\x3c!--truncate--\x3e\\n\\n## \u9898\u76ee\\n\\n\u5c0f\u670b\u53cb A \u5728\u548c ta \u7684\u5c0f\u4f19\u4f34\u4eec\u73a9\u4f20\u4fe1\u606f\u6e38\u620f\uff0c\u6e38\u620f\u89c4\u5219\u5982\u4e0b\uff1a\\n\\n1. \u6709 n \u540d\u73a9\u5bb6\uff0c\u6240\u6709\u73a9\u5bb6\u7f16\u53f7\u5206\u522b\u4e3a 0 \uff5e n-1\uff0c\u5176\u4e2d\u5c0f\u670b\u53cb A \u7684\u7f16\u53f7\u4e3a 0\\n2. \u6bcf\u4e2a\u73a9\u5bb6\u90fd\u6709\u56fa\u5b9a\u7684\u82e5\u5e72\u4e2a\u53ef\u4f20\u4fe1\u606f\u7684\u5176\u4ed6\u73a9\u5bb6\uff08\u4e5f\u53ef\u80fd\u6ca1\u6709\uff09\u3002\u4f20\u4fe1\u606f\u7684\u5173\u7cfb\u662f\u5355\u5411\u7684\uff08\u6bd4\u5982 A \u53ef\u4ee5\u5411 B \u4f20\u4fe1\u606f\uff0c\u4f46 B \u4e0d\u80fd\u5411 A \u4f20\u4fe1\u606f\uff09\u3002\\n3. \u6bcf\u8f6e\u4fe1\u606f\u5fc5\u987b\u9700\u8981\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u4eba\uff0c\u4e14\u4fe1\u606f\u53ef\u91cd\u590d\u7ecf\u8fc7\u540c\u4e00\u4e2a\u4eba\\n\\n\u7ed9\u5b9a\u603b\u73a9\u5bb6\u6570 n\uff0c\u4ee5\u53ca\u6309 [\u73a9\u5bb6\u7f16\u53f7,\u5bf9\u5e94\u53ef\u4f20\u9012\u73a9\u5bb6\u7f16\u53f7] \u5173\u7cfb\u7ec4\u6210\u7684\u4e8c\u7ef4\u6570\u7ec4 relation\u3002\u8fd4\u56de\u4fe1\u606f\u4ece\u5c0f A (\u7f16\u53f7 0 ) \u7ecf\u8fc7 k \u8f6e\u4f20\u9012\u5230\u7f16\u53f7\u4e3a n-1 \u7684\u5c0f\u4f19\u4f34\u5904\u7684\u65b9\u6848\u6570\uff1b\u82e5\u4e0d\u80fd\u5230\u8fbe\uff0c\u8fd4\u56de 0\u3002\\n\\n\u793a\u4f8b 1\uff1a\\n\\n- \u8f93\u5165\uff1an = 5, relation = [[0,2],[2,1],[3,4],[2,3],[1,4],[2,0],[0,4]], k = 3\\n- \u8f93\u51fa\uff1a3\\n- \u89e3\u91ca\uff1a\u4fe1\u606f\u4ece\u5c0f A \u7f16\u53f7 0 \u5904\u5f00\u59cb\uff0c\u7ecf 3 \u8f6e\u4f20\u9012\uff0c\u5230\u8fbe\u7f16\u53f7 4\u3002\u5171\u6709 3 \u79cd\u65b9\u6848\uff0c\u5206\u522b\u662f 0->2->0->4\uff0c 0->2->1->4\uff0c 0->2->3->4\u3002\\n\\n\u793a\u4f8b 2\uff1a\\n\\n- \u8f93\u5165\uff1an = 3, relation = [[0,2],[2,1]], k = 2\\n- \u8f93\u51fa\uff1a0\\n- \u89e3\u91ca\uff1a\u4fe1\u606f\u4e0d\u80fd\u4ece\u5c0f A \u5904\u7ecf\u8fc7 2 \u8f6e\u4f20\u9012\u5230\u7f16\u53f7 2\\n\\n\u9650\u5236\uff1a\\n\\n```\\n2 <= n <= 10\\n1 <= k <= 5\\n1 <= relation.length <= 90, \u4e14 relation[i].length == 2\\n0 <= relation[i][0],relation[i][1] < n \u4e14 relation[i][0] != relation[i][1]\\n```\\n\\n> \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\\n> \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/chuan-di-xin-xi\\n> \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\\n\\n## C++ Solution\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int numWays(int n, vector<vector<int>>& relation, int k) {\\n        return dfs(0, relation, n, k);\\n    }\\n\\n    int dfs(int current, vector<vector<int>>& relation, int n, int k){\\n        if (k == 0 && current == n - 1){\\n            // Find a solution\\n            return 1;\\n        }\\n        else if (k == 0) {\\n            return 0;\\n        }\\n        else {\\n            int ans = 0;\\n            for (int i = 0; i < relation.size(); ++i){\\n                if (relation[i][0] == current) {\\n                    ans += dfs(relation[i][1], relation, n, k - 1);\\n                }\\n            }\\n            return ans;\\n        }\\n    }\\n};\\n```\\n\\n## Rust Solution\\n\\n\u4e00\u4e2a\u7c7b\u4f3c\u4e0a\u65b9 cpp \u7684\uff0c\u53ef\u80fd\u975e\u5e38\u4e0d rust \u7684\u5199\u6cd5\u3002\\n\\n```rust\\nimpl Solution {\\n    pub fn num_ways(n: i32, relation: Vec<Vec<i32>>, k: i32) -> i32 {\\n        fn dfs(current: i32, relation: &Vec<Vec<i32>>, n: i32, k: i32) -> i32 {\\n            if k == 0 && current == n - 1 {\\n                1\\n            }\\n            else if k == 0 {\\n                0\\n            }\\n            else {\\n                let mut ans: i32 = 0;\\n                for r in relation {\\n                    if r[0] == current {\\n                        ans = ans + dfs(r[1], relation, n, k - 1);\\n                    }\\n                }\\n                ans\\n            }\\n        }\\n\\n        dfs(0, &relation, n, k)\\n    }\\n}\\n```"},{"id":"hello-world","metadata":{"permalink":"/leetcode/hello-world","editUrl":"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-06-30-hello-world.md","source":"@site/blog/2021-06-30-hello-world.md","title":"Hello","description":"\u5c1d\u8bd5\u4f7f\u7528 Docusaurus 2 \u7684\u535a\u5ba2\u6a21\u5f0f\u6765\u8bb0\u5f55\u6211\u7684 leetcode \u89e3\u6cd5\u3002","date":"2021-06-30T00:00:00.000Z","formattedDate":"June 30, 2021","tags":[{"label":"hello","permalink":"/leetcode/tags/hello"}],"readingTime":0.095,"truncated":false,"authors":[],"prevItem":{"title":"LCP 07 \u4f20\u9012\u4fe1\u606f","permalink":"/leetcode/lcp07"}},"content":"\u5c1d\u8bd5\u4f7f\u7528 [**Docusaurus 2**](https://docusaurus.io/) \u7684\u535a\u5ba2\u6a21\u5f0f\u6765\u8bb0\u5f55\u6211\u7684 leetcode \u89e3\u6cd5\u3002"}]}')}}]);
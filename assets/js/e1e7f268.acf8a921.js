(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[9654],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(n),f=o,d=m["".concat(u,".").concat(f)]||m[f]||s[f]||i;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9718:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return l},assets:function(){return p},toc:function(){return s},default:function(){return f}});var r=n(4034),o=n(9973),i=(n(7294),n(3905)),a=["components"],c={slug:1646,title:"1646 \u83b7\u53d6\u751f\u6210\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c",tags:["\u52a8\u6001\u89c4\u5212","\u9012\u5f52"]},u=void 0,l={permalink:"/leetcode/1646",editUrl:"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-08-23-1646.md",source:"@site/blog/2021-08-23-1646.md",title:"1646 \u83b7\u53d6\u751f\u6210\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c",description:"\u53ef\u4ee5\u5bb9\u6613\u5730\u4f7f\u7528 O(n) \u7684\u65b9\u6cd5\uff0c\u4e00\u7ef4\u52a8\u5f52\u7b97\u51fa\u6240\u6709\u7684\u6570\uff0c\u540c\u65f6\u8bb0\u5f55\u6700\u5927\u503c\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u628a\u8ba1\u7b97\u8fc7\u7a0b\u7528\u9012\u5f52\u5199\u51fa\u6765\uff0c\u8fd8\u53ef\u4ee5\u6253\u8868\u3002",date:"2021-08-23T00:00:00.000Z",formattedDate:"August 23, 2021",tags:[{label:"\u52a8\u6001\u89c4\u5212",permalink:"/leetcode/tags/\u52a8\u6001\u89c4\u5212"},{label:"\u9012\u5f52",permalink:"/leetcode/tags/\u9012\u5f52"}],readingTime:.64,truncated:!0,authors:[],prevItem:{title:"881 \u6551\u751f\u8247",permalink:"/leetcode/881"},nextItem:{title:"789 \u9003\u8131\u963b\u788d\u8005",permalink:"/leetcode/789"}},p={authorsImageUrls:[]},s=[{value:"C++ Solution",id:"c-solution",children:[],level:2}],m={toc:s};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u53ef\u4ee5\u5bb9\u6613\u5730\u4f7f\u7528 O(n) \u7684\u65b9\u6cd5\uff0c\u4e00\u7ef4\u52a8\u5f52\u7b97\u51fa\u6240\u6709\u7684\u6570\uff0c\u540c\u65f6\u8bb0\u5f55\u6700\u5927\u503c\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u628a\u8ba1\u7b97\u8fc7\u7a0b\u7528\u9012\u5f52\u5199\u51fa\u6765\uff0c\u8fd8\u53ef\u4ee5\u6253\u8868\u3002"),(0,i.kt)("h2",{id:"c-solution"},"C++ Solution"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int getMaximumGenerated(int n) {\n        vector<int> nums = vector<int>(n + 1);\n        if (n < 2)\n        {\n            return n;\n        }\n        nums[1] = 1;\n        int max = 0;\n        for (int i = 1; i <= n; ++i)\n        {\n            int j = i >> 1;\n            nums[i] = nums[j] + (i % 2 ? nums[j + 1] : 0);\n            max = nums[i] > max ? nums[i] : max;\n        }\n        return max;\n    }\n};\n")))}f.isMDXComponent=!0}}]);
(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[2125],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return s},kt:function(){return k}});var r=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,o=e.originalType,c=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),f=u(t),k=l,m=f["".concat(c,".").concat(k)]||f[k]||p[k]||o;return t?r.createElement(m,i(i({ref:n},s),{},{components:t})):r.createElement(m,i({ref:n},s))}));function k(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var o=t.length,i=new Array(o);i[0]=f;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:l,i[1]=a;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},1904:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return u},assets:function(){return s},toc:function(){return p},default:function(){return k}});var r=t(4034),l=t(9973),o=(t(7294),t(3905)),i=["components"],a={slug:541,title:"541 \u53cd\u8f6c\u5b57\u7b26\u4e32 II",tags:["\u53cc\u6307\u9488","\u8fed\u4ee3\u5668"]},c=void 0,u={permalink:"/leetcode/541",editUrl:"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-08-20-541.md",source:"@site/blog/2021-08-20-541.md",title:"541 \u53cd\u8f6c\u5b57\u7b26\u4e32 II",description:"\u7528\u5faa\u73af\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5199\u51fa\u4e00\u4e2a\u6548\u7387\u4e0d\u9ad8\u7684\u5b9e\u73b0\uff0c\u7136\u540e\u53d1\u73b0\u8fed\u4ee3\u5668\u771f\u597d\u7528 orz",date:"2021-08-20T00:00:00.000Z",formattedDate:"August 20, 2021",tags:[{label:"\u53cc\u6307\u9488",permalink:"/leetcode/tags/\u53cc\u6307\u9488"},{label:"\u8fed\u4ee3\u5668",permalink:"/leetcode/tags/\u8fed\u4ee3\u5668"}],readingTime:1.9,truncated:!0,authors:[],prevItem:{title:"53 \u6700\u5927\u5b50\u5e8f\u548c",permalink:"/leetcode/53"},nextItem:{title:"58 \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6",permalink:"/leetcode/58"}},s={authorsImageUrls:[]},p=[{value:"\u9898\u76ee",id:"\u9898\u76ee",children:[],level:2},{value:"C++ Solution",id:"c-solution",children:[],level:2}],f={toc:p};function k(e){var n=e.components,t=(0,l.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u7528\u5faa\u73af\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5199\u51fa\u4e00\u4e2a\u6548\u7387\u4e0d\u9ad8\u7684\u5b9e\u73b0\uff0c\u7136\u540e\u53d1\u73b0\u8fed\u4ee3\u5668\u771f\u597d\u7528 orz"),(0,o.kt)("h2",{id:"\u9898\u76ee"},"\u9898\u76ee"),(0,o.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \u548c\u4e00\u4e2a\u6574\u6570 k\uff0c\u4ece\u5b57\u7b26\u4e32\u5f00\u5934\u7b97\u8d77\uff0c\u6bcf 2k \u4e2a\u5b57\u7b26\u53cd\u8f6c\u524d k \u4e2a\u5b57\u7b26\u3002"),(0,o.kt)("p",null,"\u5982\u679c\u5269\u4f59\u5b57\u7b26\u5c11\u4e8e k \u4e2a\uff0c\u5219\u5c06\u5269\u4f59\u5b57\u7b26\u5168\u90e8\u53cd\u8f6c\u3002\n\u5982\u679c\u5269\u4f59\u5b57\u7b26\u5c0f\u4e8e 2k \u4f46\u5927\u4e8e\u6216\u7b49\u4e8e k \u4e2a\uff0c\u5219\u53cd\u8f6c\u524d k \u4e2a\u5b57\u7b26\uff0c\u5176\u4f59\u5b57\u7b26\u4fdd\u6301\u539f\u6837\u3002"),(0,o.kt)("p",null,"\u793a\u4f8b 1\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1as = "abcdefg", k = 2\n\u8f93\u51fa\uff1a"bacdfeg"\n')),(0,o.kt)("p",null,"\u793a\u4f8b 2\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1as = "abcd", k = 2\n\u8f93\u51fa\uff1a"bacd"\n')),(0,o.kt)("p",null,"\u63d0\u793a\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"1 <= s.length <= 104\ns \u4ec5\u7531\u5c0f\u5199\u82f1\u6587\u7ec4\u6210\n1 <= k <= 104\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u94fe\u63a5\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/reverse-string-ii"},"https://leetcode-cn.com/problems/reverse-string-ii"),"\n\u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002")),(0,o.kt)("h2",{id:"c-solution"},"C++ Solution"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    string reverseStr(string s, int k) {\n        int len = s.length();\n        int len_ = len - 1;\n        int lo = 0;\n        int hi = 0;\n        int kk = k - 1;\n\n        while (lo <= len)\n        {\n            while (hi - lo < kk)\n            {\n                hi += 1;\n                if (hi == len_)\n                {\n                    break;\n                }\n            }\n            if (hi > len_)\n            {\n                break;\n            }\n            int h = hi + 1 + k;\n            while (lo < hi)\n            {\n                s[lo] = s[lo] ^ s[hi];\n                s[hi] = s[lo] ^ s[hi];\n                s[lo] = s[lo] ^ s[hi];\n                lo += 1;\n                hi -= 1;\n            }\n            lo = h;\n            hi = h;\n        }\n        return s;\n    }\n};\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    string reverseStr(string s, int k) {\n        int len = s.length();\n        int k2 = 2 * k;\n        for (int i = 0; i < len; i += k2)\n        {\n            reverse(s.begin() + i, s.begin() + min(i + k, len));\n        }\n        return s;\n    }\n};\n")))}k.isMDXComponent=!0}}]);
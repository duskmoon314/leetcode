(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[893],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),c=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),m=c(t),d=i,f=m["".concat(u,".").concat(d)]||m[d]||p[d]||o;return t?r.createElement(f,l(l({ref:n},s),{},{components:t})):r.createElement(f,l({ref:n},s))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,l=new Array(o);l[0]=m;var a={};for(var u in n)hasOwnProperty.call(n,u)&&(a[u]=n[u]);a.originalType=e,a.mdxType="string"==typeof e?e:i,l[1]=a;for(var c=2;c<o;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8837:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return u},metadata:function(){return c},assets:function(){return s},toc:function(){return p},default:function(){return d}});var r=t(4034),i=t(9973),o=(t(7294),t(3905)),l=["components"],a={slug:704,title:"704 \u4e8c\u5206\u67e5\u627e",tags:["\u4e8c\u5206\u67e5\u627e","\u9012\u5f52"]},u=void 0,c={permalink:"/leetcode/704",editUrl:"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-09-06-704.md",source:"@site/blog/2021-09-06-704.md",title:"704 \u4e8c\u5206\u67e5\u627e",description:"\u53ef\u4ee5\u6bd4\u8f83\u7b80\u5355\u5730\u5199\u51fa\u9012\u5f52\u7684\u5728\u5de6\u5b50\u3001\u53f3\u5b50\u5e8f\u5217\u53bb\u67e5\u627e",date:"2021-09-06T00:00:00.000Z",formattedDate:"September 6, 2021",tags:[{label:"\u4e8c\u5206\u67e5\u627e",permalink:"/leetcode/tags/\u4e8c\u5206\u67e5\u627e"},{label:"\u9012\u5f52",permalink:"/leetcode/tags/\u9012\u5f52"}],readingTime:2.075,truncated:!0,authors:[],prevItem:{title:"502 IPO",permalink:"/leetcode/502"},nextItem:{title:"470 \u7528 Rand7() \u5b9e\u73b0 Rand10()",permalink:"/leetcode/470"}},s={authorsImageUrls:[]},p=[{value:"\u9898\u76ee",id:"\u9898\u76ee",children:[],level:2},{value:"C++ Solution",id:"c-solution",children:[],level:2}],m={toc:p};function d(e){var n=e.components,t=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u53ef\u4ee5\u6bd4\u8f83\u7b80\u5355\u5730\u5199\u51fa\u9012\u5f52\u7684\u5728\u5de6\u5b50\u3001\u53f3\u5b50\u5e8f\u5217\u53bb\u67e5\u627e"),(0,o.kt)("h2",{id:"\u9898\u76ee"},"\u9898\u76ee"),(0,o.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a \xa0n\xa0 \u4e2a\u5143\u7d20\u6709\u5e8f\u7684\uff08\u5347\u5e8f\uff09\u6574\u578b\u6570\u7ec4 \xa0nums \u548c\u4e00\u4e2a\u76ee\u6807\u503c \xa0target \xa0\uff0c\u5199\u4e00\u4e2a\u51fd\u6570\u641c\u7d22 \xa0nums\xa0 \u4e2d\u7684 target\uff0c\u5982\u679c\u76ee\u6807\u503c\u5b58\u5728\u8fd4\u56de\u4e0b\u6807\uff0c\u5426\u5219\u8fd4\u56de -1\u3002"),(0,o.kt)("p",null,"\u793a\u4f8b 1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u8f93\u5165: nums = [-1,0,3,5,9,12], target = 9\n\u8f93\u51fa: 4\n\u89e3\u91ca: 9 \u51fa\u73b0\u5728 nums \u4e2d\u5e76\u4e14\u4e0b\u6807\u4e3a 4\n")),(0,o.kt)("p",null,"\u793a\u4f8b \xa02:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u8f93\u5165: nums = [-1,0,3,5,9,12], target = 2\n\u8f93\u51fa: -1\n\u89e3\u91ca: 2 \u4e0d\u5b58\u5728 nums \u4e2d\u56e0\u6b64\u8fd4\u56de -1\n")),(0,o.kt)("p",null,"\u63d0\u793a\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u4f60\u53ef\u4ee5\u5047\u8bbe nums\xa0\u4e2d\u7684\u6240\u6709\u5143\u7d20\u662f\u4e0d\u91cd\u590d\u7684\u3002\nn\xa0\u5c06\u5728\xa0[1, 10000]\u4e4b\u95f4\u3002\nnums\xa0\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u5c06\u5728\xa0[-9999, 9999]\u4e4b\u95f4\u3002\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u94fe\u63a5\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/binary-search"},"https://leetcode-cn.com/problems/binary-search"),"\n\u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002")),(0,o.kt)("h2",{id:"c-solution"},"C++ Solution"),(0,o.kt)("p",null,"\u9012\u5f52\u7684\u65b9\u6cd5"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int search(vector<int>&nums, int lo, int hi, int target) {\n        if (hi - lo <= 2) {\n            for (int i = lo; i <= hi; ++i) {\n                if (nums[i] == target) {\n                    return i;\n                }\n            }\n            return -1;\n        } else {\n            int mid = (lo + hi) >> 1;\n            if (target <= nums[mid]) {\n                return search(nums, lo, mid, target);\n            } else {\n                return search(nums, mid + 1, hi, target);\n            }\n        }\n    }\n    int search(vector<int>& nums, int target) {\n        return search(nums, 0, nums.size() - 1, target);\n    }\n};\n")),(0,o.kt)("p",null,"\u76f4\u63a5\u5faa\u73af\u7684\u65b9\u6cd5"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int search(vector<int>& nums, int target) {\n        int lo = 0;\n        int hi = nums.size() - 1;\n        while (true) {\n            if (hi - lo < 3) {\n                for (int i = lo; i <= hi; ++i) {\n                    if (nums[i] == target) {\n                        return i;\n                    }\n                }\n                return -1;\n            }\n            int mid = (lo + hi) >> 1;\n            if (nums [mid] == target) {\n                return mid;\n            } else if (nums[mid] < target) {\n                lo = mid;\n            } else {\n                hi = mid;\n            }\n        }\n    }\n};\n")))}d.isMDXComponent=!0}}]);
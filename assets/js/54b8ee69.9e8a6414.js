(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[423],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),a=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=a(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=a(n),f=o,d=m["".concat(s,".").concat(f)]||m[f]||p[f]||c;return n?r.createElement(d,l(l({ref:t},u),{},{components:n})):r.createElement(d,l({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,l=new Array(c);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var a=2;a<c;a++)l[a]=n[a];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5112:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return a},assets:function(){return u},toc:function(){return p},default:function(){return f}});var r=n(4034),o=n(9973),c=(n(7294),n(3905)),l=["components"],i={slug:1833,title:"1833 \u96ea\u7cd5\u7684\u6700\u5927\u6570\u91cf",tags:["\u6392\u5e8f","\u8d2a\u5fc3"]},s=void 0,a={permalink:"/leetcode/1833",editUrl:"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-07-02-1833.md",source:"@site/blog/2021-07-02-1833.md",title:"1833 \u96ea\u7cd5\u7684\u6700\u5927\u6570\u91cf",description:"1833 \u6700\u7b80\u5355\u7684\u505a\u6cd5\u4f3c\u4e4e\u5c31\u662f\u6392\u5e8f\u540e\u6765\u4e2a\u5faa\u73af\u53d6\u3002\u601d\u8003\u4e86\u4e00\u4e0b\u7528\u5c0f\u6839\u5806\u4f3c\u4e4e\u590d\u6742\u5ea6\u5dee\u522b\u4e0d\u662f\u7279\u522b\u5927\u3002\uff08\u6216\u8005\u6211\u592a\u83dc\u4e86\u60f3\u9519\u4e86\uff09",date:"2021-07-02T00:00:00.000Z",formattedDate:"July 2, 2021",tags:[{label:"\u6392\u5e8f",permalink:"/leetcode/tags/\u6392\u5e8f"},{label:"\u8d2a\u5fc3",permalink:"/leetcode/tags/\u8d2a\u5fc3"}],readingTime:2.345,truncated:!0,authors:[],prevItem:{title:"930 \u548c\u76f8\u540c\u7684\u4e8c\u5143\u5b50\u6570\u7ec4",permalink:"/leetcode/930"},nextItem:{title:"LCP 07 \u4f20\u9012\u4fe1\u606f",permalink:"/leetcode/lcp07"}},u={authorsImageUrls:[]},p=[{value:"\u9898\u76ee",id:"\u9898\u76ee",children:[],level:2},{value:"C++ Solution",id:"c-solution",children:[],level:2},{value:"Rust Solution",id:"rust-solution",children:[],level:2}],m={toc:p};function f(e){var t=e.components,n=(0,o.Z)(e,l);return(0,c.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"1833 \u6700\u7b80\u5355\u7684\u505a\u6cd5\u4f3c\u4e4e\u5c31\u662f\u6392\u5e8f\u540e\u6765\u4e2a\u5faa\u73af\u53d6\u3002\u601d\u8003\u4e86\u4e00\u4e0b\u7528\u5c0f\u6839\u5806\u4f3c\u4e4e\u590d\u6742\u5ea6\u5dee\u522b\u4e0d\u662f\u7279\u522b\u5927\u3002\uff08\u6216\u8005\u6211\u592a\u83dc\u4e86\u60f3\u9519\u4e86\uff09"),(0,c.kt)("h2",{id:"\u9898\u76ee"},"\u9898\u76ee"),(0,c.kt)("p",null,"\u590f\u65e5\u708e\u708e\uff0c\u5c0f\u7537\u5b69 Tony \u60f3\u4e70\u4e00\u4e9b\u96ea\u7cd5\u6d88\u6d88\u6691\u3002"),(0,c.kt)("p",null,"\u5546\u5e97\u4e2d\u65b0\u5230 n \u652f\u96ea\u7cd5\uff0c\u7528\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4 costs \u8868\u793a\u96ea\u7cd5\u7684\u5b9a\u4ef7\uff0c\u5176\u4e2d costs","[i]"," \u8868\u793a\u7b2c i \u652f\u96ea\u7cd5\u7684\u73b0\u91d1\u4ef7\u683c\u3002Tony \u4e00\u5171\u6709 coins \u73b0\u91d1\u53ef\u4ee5\u7528\u4e8e\u6d88\u8d39\uff0c\u4ed6\u60f3\u8981\u4e70\u5c3d\u53ef\u80fd\u591a\u7684\u96ea\u7cd5\u3002"),(0,c.kt)("p",null,"\u7ed9\u4f60\u4ef7\u683c\u6570\u7ec4 costs \u548c\u73b0\u91d1\u91cf coins \uff0c\u8bf7\u4f60\u8ba1\u7b97\u5e76\u8fd4\u56de Tony \u7528 coins \u73b0\u91d1\u80fd\u591f\u4e70\u5230\u7684\u96ea\u7cd5\u7684 \u6700\u5927\u6570\u91cf \u3002"),(0,c.kt)("p",null,"\u6ce8\u610f\uff1aTony \u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8d2d\u4e70\u96ea\u7cd5\u3002"),(0,c.kt)("p",null,"\u793a\u4f8b 1\uff1a"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1acosts = [1,3,2,4,1], coins = 7\n\u8f93\u51fa\uff1a4\n\u89e3\u91ca\uff1aTony \u53ef\u4ee5\u4e70\u4e0b\u6807\u4e3a 0\u30011\u30012\u30014 \u7684\u96ea\u7cd5\uff0c\u603b\u4ef7\u4e3a 1 + 3 + 2 + 1 = 7\n")),(0,c.kt)("p",null,"\u793a\u4f8b 2\uff1a"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1acosts = [10,6,8,7,7,8], coins = 5\n\u8f93\u51fa\uff1a0\n\u89e3\u91ca\uff1aTony \u6ca1\u6709\u8db3\u591f\u7684\u94b1\u4e70\u4efb\u4f55\u4e00\u652f\u96ea\u7cd5\u3002\n")),(0,c.kt)("p",null,"\u793a\u4f8b 3\uff1a"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1acosts = [1,6,3,1,2,5], coins = 20\n\u8f93\u51fa\uff1a6\n\u89e3\u91ca\uff1aTony \u53ef\u4ee5\u4e70\u4e0b\u6240\u6709\u7684\u96ea\u7cd5\uff0c\u603b\u4ef7\u4e3a 1 + 6 + 3 + 1 + 2 + 5 = 18 \u3002\n")),(0,c.kt)("p",null,"\u63d0\u793a\uff1a"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"costs.length == n\n1 <= n <= 105\n1 <= costs[i] <= 105\n1 <= coins <= 108\n")),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u94fe\u63a5\uff1a",(0,c.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/maximum-ice-cream-bars"},"https://leetcode-cn.com/problems/maximum-ice-cream-bars"),"\n\u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002")),(0,c.kt)("h2",{id:"c-solution"},"C++ Solution"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"int maxIceCream(vector<int> &costs, int coins)\n{\n    sort(costs.begin(), costs.end());\n    int cost = 0, cnt = 0;\n    for (int i = 0; i < costs.size(); ++i)\n    {\n        if (cost + costs[i] <= coins)\n        {\n            cost += costs[i];\n            cnt += 1;\n        }\n        else\n        {\n            break;\n        }\n    }\n    return cnt;\n}\n")),(0,c.kt)("h2",{id:"rust-solution"},"Rust Solution"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-rust"},"fn max_ice_cream(costs: Vec<i32>, coins: i32) -> i32 {\n    let mut mut_costs = costs;\n    mut_costs.sort_unstable();\n    let (mut cost, mut cnt) = (0, 0);\n    for i in mut_costs {\n        if cost + i <= coins {\n            cost += i;\n            cnt += 1;\n        } else {\n            break;\n        }\n    }\n    cnt\n}\n")))}f.isMDXComponent=!0}}]);
(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[3052],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=u(n),d=o,m=s["".concat(c,".").concat(d)]||s[d]||f[d]||a;return n?r.createElement(m,l(l({ref:t},p),{},{components:n})):r.createElement(m,l({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=s;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var u=2;u<a;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},7413:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return u},assets:function(){return p},toc:function(){return f},default:function(){return d}});var r=n(4034),o=n(9973),a=(n(7294),n(3905)),l=["components"],i={slug:"offer22",title:"\u5251\u6307 Offer 22 \u94fe\u8868\u4e2d\u5012\u6570\u7b2c k \u4e2a\u8282\u70b9",tags:["\u53cc\u6307\u9488"]},c=void 0,u={permalink:"/leetcode/offer22",editUrl:"https://github.com/duskmoon314/leetcode/edit/master/website/blog/blog/2021-09-02-offer22.md",source:"@site/blog/2021-09-02-offer22.md",title:"\u5251\u6307 Offer 22 \u94fe\u8868\u4e2d\u5012\u6570\u7b2c k \u4e2a\u8282\u70b9",description:"\u7ef4\u62a4\u4e24\u4e2a\u6307\u9488\uff0c\u95f4\u8ddd k\uff0c\u5c3e\u6307\u9488\u6307\u5411\u672b\u5c3e\u65f6\u8f93\u51fa\u5373\u53ef",date:"2021-09-02T00:00:00.000Z",formattedDate:"September 2, 2021",tags:[{label:"\u53cc\u6307\u9488",permalink:"/leetcode/tags/\u53cc\u6307\u9488"}],readingTime:1.18,truncated:!0,authors:[],prevItem:{title:"\u9762\u8bd5\u9898 17.14 \u6700\u5c0f K \u4e2a\u6570",permalink:"/leetcode/17.14"},nextItem:{title:"1109 \u822a\u73ed\u9884\u8ba2\u7edf\u8ba1",permalink:"/leetcode/1109"}},p={authorsImageUrls:[]},f=[{value:"\u9898\u76ee",id:"\u9898\u76ee",children:[],level:2},{value:"C++ Solution",id:"c-solution",children:[],level:2}],s={toc:f};function d(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u7ef4\u62a4\u4e24\u4e2a\u6307\u9488\uff0c\u95f4\u8ddd k\uff0c\u5c3e\u6307\u9488\u6307\u5411\u672b\u5c3e\u65f6\u8f93\u51fa\u5373\u53ef"),(0,a.kt)("h2",{id:"\u9898\u76ee"},"\u9898\u76ee"),(0,a.kt)("p",null,"\u8f93\u5165\u4e00\u4e2a\u94fe\u8868\uff0c\u8f93\u51fa\u8be5\u94fe\u8868\u4e2d\u5012\u6570\u7b2c k \u4e2a\u8282\u70b9\u3002\u4e3a\u4e86\u7b26\u5408\u5927\u591a\u6570\u4eba\u7684\u4e60\u60ef\uff0c\u672c\u9898\u4ece 1 \u5f00\u59cb\u8ba1\u6570\uff0c\u5373\u94fe\u8868\u7684\u5c3e\u8282\u70b9\u662f\u5012\u6570\u7b2c 1 \u4e2a\u8282\u70b9\u3002"),(0,a.kt)("p",null,"\u4f8b\u5982\uff0c\u4e00\u4e2a\u94fe\u8868\u6709 6 \u4e2a\u8282\u70b9\uff0c\u4ece\u5934\u8282\u70b9\u5f00\u59cb\uff0c\u5b83\u4eec\u7684\u503c\u4f9d\u6b21\u662f 1\u30012\u30013\u30014\u30015\u30016\u3002\u8fd9\u4e2a\u94fe\u8868\u7684\u5012\u6570\u7b2c 3 \u4e2a\u8282\u70b9\u662f\u503c\u4e3a 4 \u7684\u8282\u70b9\u3002"),(0,a.kt)("p",null,"\u793a\u4f8b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868: 1->2->3->4->5, \u548c k = 2.\n\n\u8fd4\u56de\u94fe\u8868 4->5.\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u94fe\u63a5\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof"},"https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof"),"\n\u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002")),(0,a.kt)("h2",{id:"c-solution"},"C++ Solution"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    ListNode* getKthFromEnd(ListNode* head, int k) {\n        ListNode* start = head;\n        ListNode* end = head;\n        for (int i = 1; i < k; ++i) {\n            end = end->next;\n        }\n        while (end->next != NULL) {\n            start = start->next;\n            end = end->next;\n        }\n        return start;\n    }\n};\n")))}d.isMDXComponent=!0}}]);